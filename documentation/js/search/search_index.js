var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.283,1,0.829]],["body/components/AboutComponent.html",[0,0.47,1,1.299,2,0.211,3,0.18,4,1.053,5,1.053,6,1.053,7,0.149,8,2.307,9,1.393,10,1.76,11,1.053,12,2.174,13,1.143,14,1.393,15,3.942,16,1.393,17,3.942,18,0.211,19,0.941,20,1.921,21,0.582,22,0.446,23,2.754,24,2.754,25,0.606,26,0.03,27,1.14,28,0.468,29,0.468,30,0.18,31,0.056,32,3.942,33,2.567,34,2.881,35,3.942,36,6.152,37,6.152,38,5.532,39,5.532,40,6.152,41,5.532,42,5.532,43,5.532,44,6.152,45,5.532,46,5.532,47,5.532,48,5.532,49,5.532,50,4.635,51,5.532,52,5.532,53,5.532,54,5.532,55,5.532,56,3.942,57,3.942,58,3.942,59,3.942,60,3.942,61,3.942,62,0.9,63,1.507,64,1.393,65,1.507,66,1.921,67,1.053,68,0.446,69,1.053,70,0.77,71,1.053,72,0.77,73,1.053,74,0.77,75,1.053,76,0.712,77,1.053,78,0.77,79,1.053,80,0.712,81,1.053,82,0.712,83,0.798,84,1.053,85,0.77,86,0.77,87,1.053,88,0.658,89,0.9,90,1.053,91,0.018,92,0.018]],["title/classes/Answer.html",[31,0.066,93,1.225]],["body/classes/Answer.html",[2,0.309,3,0.263,7,0.219,9,1.424,18,0.309,21,0.51,22,0.665,26,0.03,30,0.263,31,0.104,68,0.456,91,0.023,92,0.023,93,2.136,94,3.376,95,1.121,96,4.648,97,5.184,98,4.14,99,5.096,100,1.214,101,2.365,102,5.096,103,0.623,104,0.59,105,0.623,106,1.81,107,4.029,108,4.029,109,4.029,110,4.029,111,4.029,112,4.029,113,3.376,114,4.029,115,4.029,116,4.029,117,4.269,118,1.317]],["title/components/AnswerComponent.html",[0,0.283,70,0.897]],["body/components/AnswerComponent.html",[0,0.415,1,0.532,2,0.158,3,0.134,4,0.787,5,0.787,6,0.787,7,0.112,9,1.121,10,1.48,11,0.787,12,2.045,13,1.075,14,1.121,16,1.121,18,0.158,19,0.758,20,1.664,21,0.401,22,0.702,25,1.274,26,0.031,27,2.396,28,0.799,29,0.349,30,0.134,31,0.042,62,0.673,63,1.213,64,1.121,65,1.213,66,1.664,67,0.787,68,0.439,69,0.787,70,1.218,71,0.787,72,0.576,73,0.787,74,0.576,75,0.787,76,0.532,77,0.787,78,0.576,79,0.787,80,0.532,81,0.787,82,0.532,83,0.642,84,0.787,85,0.576,86,0.576,87,0.787,88,0.491,89,0.673,90,0.787,91,0.014,92,0.014,93,2.142,95,0.698,103,0.318,104,0.538,105,0.318,118,1.037,119,1.724,120,3.173,121,3.173,122,4.353,123,2.712,124,4.353,125,4.353,126,4.353,127,3.647,128,4.353,129,4.353,130,4.353,131,3.647,132,4.353,133,4.353,134,4.353,135,2.327,136,3.182,137,3.182,138,2.835,139,3.245,140,3.182,141,3.245,142,1.724,143,2.656,144,2.768,145,3.173,146,2.058,147,1.209,148,3.182,149,2.058,150,2.058,151,2.058,152,2.058,153,2.058,154,2.058,155,2.058,156,2.058,157,2.058,158,2.058,159,2.058,160,2.058,161,2.058,162,3.573,163,2.058,164,2.058,165,2.058,166,2.058,167,1.504,168,1.504,169,0.821,170,3.873,171,2.919,172,1.724,173,0.642,174,3.173,175,3.873,176,3.873,177,2.058,178,2.058,179,2.659,180,1.724,181,2.058,182,2.058,183,2.058,184,2.276,185,1.724,186,1.317,187,2.058,188,1.552,189,1.213,190,2.067,191,2.659,192,1.504,193,1.979,194,2.058,195,1.34,196,2.067,197,1.552,198,2.058,199,1.504,200,2.522,201,2.058,202,2.058,203,2.058,204,2.058,205,3.173,206,2.659,207,2.067,208,1.696,209,3.173,210,2.32,211,3.173]],["title/injectables/AnswerService.html",[144,1.713,212,0.897]],["body/injectables/AnswerService.html",[2,0.214,3,0.182,7,0.152,13,0.519,18,0.214,19,0.951,21,0.504,22,0.629,25,1.357,26,0.031,28,0.908,29,0.474,30,0.182,31,0.057,68,0.629,83,0.806,91,0.025,92,0.018,93,2.307,96,3.392,98,3.619,100,0.993,101,2.274,103,0.885,104,0.588,105,0.86,106,1.255,118,1.302,127,3.336,144,2.128,169,1.308,173,0.939,186,1.826,193,1.773,208,1.493,212,1.298,213,2.042,214,3.982,215,3.982,216,3.982,217,2.128,218,1.493,219,2.703,220,2.793,221,2.128,222,3.982,223,2.793,224,3.336,225,3.982,226,2.793,227,3.982,228,2.793,229,3.982,230,2.793,231,2.128,232,2.128,233,2.857,234,2.793,235,1.255,236,1.068,237,2.48,238,1.947,239,1.366,240,1.366,241,1.493,242,1.641,243,1.493,244,1.493,245,2.213,246,2.272,247,1.366,248,1.255,249,1.366,250,1.493,251,1.255,252,1.493,253,1.366,254,1.493,255,1.493,256,3.392,257,3.021,258,2.793,259,2.042,260,2.703,261,1.819,262,1.255,263,2.793,264,1.641,265,3.982,266,2.042,267,2.34,268,2.793,269,3.336,270,2.34,271,2.793]],["title/components/AppComponent.html",[0,0.283,72,0.897]],["body/components/AppComponent.html",[0,0.518,1,0.939,2,0.278,3,0.237,4,1.388,5,1.388,6,1.388,7,0.197,11,1.388,12,2.276,13,1.196,14,1.684,16,1.684,18,0.278,22,0.411,26,0.03,28,0.617,29,0.617,30,0.237,31,0.074,62,1.187,63,1.822,64,1.684,65,1.822,66,2.159,67,1.388,68,0.54,69,1.388,70,1.016,71,1.388,72,1.58,73,1.388,74,1.016,75,1.388,76,0.939,77,1.388,78,1.016,79,1.388,80,0.939,81,1.388,82,0.939,83,0.965,84,1.388,85,1.016,86,1.016,87,1.388,88,0.867,89,1.187,90,1.388,91,0.022,92,0.022,95,1.049,100,0.885,104,0.365,235,1.632,236,1.388,251,2.141,272,3.043,273,4.766,274,4.766,275,5.648,276,3.92,277,5.043,278,5.043,279,3.632,280,4.766,281,3.993,282,3.484,283,2.8,284,2.8]],["title/modules/AppModule.html",[285,1.568,286,2.087]],["body/modules/AppModule.html",[0,0.342,1,1.419,2,0.206,3,0.175,7,0.146,13,0.499,26,0.031,28,1.121,29,0.456,30,0.253,31,0.055,62,0.878,70,1.535,72,1.713,74,1.535,76,1.419,78,1.535,80,1.419,82,1.419,83,0.784,85,1.535,86,1.083,88,1.31,91,0.018,92,0.018,239,1.314,285,1.894,286,4.263,287,1.75,288,3.804,289,3.804,290,3.245,291,2.251,292,2.251,293,2.251,294,2.251,295,3.223,296,3.245,297,2.251,298,1.964,299,2.687,300,3.873,301,3.245,302,2.522,303,3.873,304,3.245,305,3.873,306,2.251,307,2.687,308,1.964,309,2.687,310,3.873,311,2.687,312,1.964,313,2.687,314,2.251,315,3.873,316,2.687,317,3.873,318,2.687,319,3.873,320,2.687,321,3.873,322,2.687,323,3.873,324,2.687,325,3.873,326,2.687,327,3.873,328,2.687,329,3.873,330,2.687,331,3.873,332,2.687,333,2.687,334,3.873,335,2.687,336,3.873,337,2.687,338,3.873,339,2.687,340,2.687,341,2.687,342,2.251,343,1.964,344,2.687,345,2.251,346,2.251,347,2.687,348,2.251,349,1.964,350,2.687,351,1.75,352,2.251,353,2.687,354,2.687]],["title/classes/AppPage.html",[31,0.066,355,2.343]],["body/classes/AppPage.html",[2,0.353,3,0.301,7,0.25,18,0.353,19,1.321,22,0.627,25,1.354,26,0.03,28,0.782,30,0.301,31,0.113,64,1.628,91,0.025,92,0.025,251,2.07,302,3.001,343,3.368,355,4.046,356,3.86,357,6.154,358,6.154,359,4.608,360,4.608,361,4.608,362,4.608,363,4.608]],["title/modules/AppRoutingModule.html",[285,1.568,295,1.883]],["body/modules/AppRoutingModule.html",[0,0.539,1,1.337,2,0.316,3,0.269,7,0.224,26,0.031,28,1.085,29,0.7,30,0.337,31,0.084,76,1.337,80,1.337,82,1.337,83,0.835,88,1.234,89,1.348,91,0.024,92,0.024,245,1.707,284,2.423,285,2.017,295,3.038,304,4.332,342,3.455,345,3.455,346,3.455,348,3.455,351,2.685,352,3.455,364,4.124,365,4.124,366,5.17,367,3.678,368,2.685,369,6.1,370,3.014,371,4.124,372,4.124]],["title/classes/Comment.html",[31,0.066,123,1.44]],["body/classes/Comment.html",[2,0.314,3,0.268,7,0.223,18,0.314,21,0.519,22,0.669,26,0.03,30,0.268,31,0.106,68,0.465,91,0.024,92,0.024,95,1.134,100,1.217,101,2.376,103,0.635,104,0.594,105,0.635,106,1.844,118,1.342,123,2.316,373,3.439,374,4.664,375,5.208,376,4.664,377,5.155,378,5.155,379,4.104,380,4.104,381,4.104,382,4.104,383,4.104,384,5.155]],["title/components/CommentComponent.html",[0,0.283,74,0.897]],["body/components/CommentComponent.html",[0,0.472,1,0.646,2,0.191,3,0.163,4,0.954,5,0.954,6,0.954,7,0.136,9,1.297,10,1.664,11,0.954,12,2.133,13,1.121,14,1.297,16,1.297,18,0.191,19,0.876,20,1.835,21,0.464,22,0.676,25,1.177,26,0.031,27,2.214,28,0.739,29,0.424,30,0.163,31,0.051,62,0.816,63,1.403,64,1.297,65,1.403,66,1.835,67,0.954,68,0.493,69,0.954,70,0.699,71,0.954,72,0.699,73,0.954,74,1.343,75,0.954,76,0.646,77,0.954,78,0.699,79,0.954,80,0.646,81,0.954,82,0.646,83,0.743,84,0.954,85,0.699,86,0.699,87,0.954,88,0.596,89,0.816,90,0.954,91,0.017,92,0.017,93,0.954,95,0.808,103,0.386,104,0.514,105,0.386,118,1.2,123,2.681,135,2.565,137,3.509,138,2.835,140,3.509,142,2.092,143,2.858,147,1.467,148,3.509,162,2.835,167,1.825,169,0.646,171,2.157,173,0.743,184,1.467,186,1.452,188,1.795,189,1.403,190,2.391,192,2.684,193,2.168,195,2.391,196,2.391,197,1.795,200,2.391,206,3.076,207,2.391,208,1.962,385,2.092,386,3.671,387,3.671,388,4.8,389,4.8,390,4.021,391,4.8,392,4.8,393,3.648,394,3.671,395,2.497,396,2.497,397,2.497,398,2.497,399,2.497,400,2.497,401,2.497,402,2.497,403,2.497,404,2.497,405,2.092,406,2.092,407,4.354,408,2.497,409,2.497,410,3.076,411,2.092,412,2.497,413,2.497,414,3.076,415,3.671,416,3.671,417,2.497,418,2.497,419,2.092,420,2.092,421,3.671]],["title/injectables/CommentService.html",[143,1.713,212,0.897]],["body/injectables/CommentService.html",[2,0.216,3,0.184,7,0.153,13,0.525,18,0.216,19,0.958,21,0.508,22,0.632,25,1.36,26,0.031,28,0.912,29,0.48,30,0.184,31,0.058,68,0.632,91,0.025,92,0.018,93,1.534,98,2.614,100,0.997,101,2.28,103,0.888,104,0.59,105,0.863,106,1.269,118,1.526,123,2.635,131,3.362,143,2.145,169,1.314,173,0.945,186,1.83,193,1.534,200,1.839,208,1.51,212,1.306,217,2.145,218,1.51,219,2.717,221,2.145,232,2.145,233,2.87,235,1.269,236,1.08,237,2.495,238,1.963,239,1.381,240,1.381,241,1.51,242,1.659,243,1.51,244,1.51,245,2.223,246,2.284,247,1.381,248,1.269,249,1.381,250,1.51,251,1.269,252,1.51,253,1.381,254,1.51,255,1.51,256,2.934,257,3.04,259,2.065,260,2.717,261,1.839,264,1.659,266,2.065,269,3.362,270,2.366,374,3.412,376,3.925,390,3.362,422,2.065,423,4.013,424,4.013,425,2.825,426,4.013,427,2.825,428,3.362,429,4.013,430,2.825,431,4.013,432,2.825,433,4.013,434,2.825,435,2.825,436,2.825,437,2.825,438,2.825,439,2.825,440,4.013,441,2.825]],["title/components/DashboardComponent.html",[0,0.283,76,0.829]],["body/components/DashboardComponent.html",[0,0.481,1,0.76,2,0.225,3,0.192,4,1.123,5,1.123,6,1.123,7,0.159,9,1.458,10,1.823,11,1.123,12,2.199,13,1.156,14,1.458,16,1.458,18,0.225,19,0.985,20,1.977,21,0.522,22,0.657,25,1.138,26,0.031,27,2.141,28,0.701,29,0.499,30,0.192,31,0.06,62,0.96,63,1.577,64,1.458,65,1.577,66,1.977,67,1.123,68,0.617,69,1.123,70,0.822,71,1.123,72,0.822,73,1.123,74,0.822,75,1.123,76,1.337,77,1.123,78,0.822,79,1.123,80,0.76,81,1.123,82,0.76,83,0.835,84,1.123,85,0.822,86,0.822,87,1.123,88,0.701,89,0.96,90,1.123,91,0.022,92,0.019,95,0.908,100,1.049,103,0.738,104,0.52,105,0.738,118,1.349,147,1.726,169,0.76,173,0.595,284,2.424,442,2.461,443,4.126,444,4.126,445,5.172,446,2.529,447,5.172,448,4.126,449,3.457,450,2.937,451,3.319,452,4.126,453,2.937,454,2.937,455,4.126,456,2.937,457,4.126,458,4.126,459,2.937,460,2.937,461,2.461,462,4.126,463,2.937,464,2.937,465,2.461,466,4.126,467,2.937,468,2.937,469,1.726,470,2.937,471,4.126,472,2.452,473,3.016,474,4.126]],["title/components/EditorComponent.html",[0,0.283,78,0.897]],["body/components/EditorComponent.html",[0,0.414,1,0.339,2,0.1,3,0.085,4,0.501,5,0.501,6,0.501,7,0.071,9,0.779,10,1.09,11,0.501,12,1.804,13,0.948,14,0.779,16,0.779,18,0.1,19,0.526,20,1.278,21,0.279,22,0.689,25,1.033,26,0.031,27,1.943,28,0.867,29,0.222,30,0.085,31,0.027,33,1.435,62,0.428,63,0.842,64,0.779,65,0.842,66,1.278,67,0.501,68,0.458,69,0.501,70,0.366,71,0.501,72,0.366,73,0.501,74,0.366,75,0.501,76,0.339,77,0.501,78,0.935,79,0.501,80,0.339,81,0.501,82,0.339,83,1.133,84,0.501,85,0.366,86,0.616,87,0.501,88,0.313,89,0.428,90,0.501,91,0.01,92,0.01,93,1.724,95,0.485,96,0.958,97,1.098,98,2.429,100,0.621,101,1.278,103,0.341,104,0.591,105,0.341,117,1.098,118,1.404,123,2.027,135,1.787,136,2.444,137,2.444,138,3.324,139,2.801,140,3.297,141,2.389,143,2.296,144,2.296,147,2.191,148,3.995,162,3.393,167,0.958,168,0.958,169,0.964,171,1.295,172,1.098,173,1.155,179,1.098,180,1.098,184,2.999,185,1.098,186,1.467,188,1.824,189,1.854,190,1.435,191,1.098,193,1.992,196,2.178,197,1.824,207,3.158,210,1.611,224,1.098,231,1.787,245,0.912,248,0.99,262,2.179,284,0.77,374,0.958,375,1.098,376,0.958,393,2.389,405,2.801,406,1.098,410,1.098,411,1.098,414,1.098,419,2.801,420,1.098,428,1.098,446,2.438,449,2.801,451,2.524,461,1.098,469,2.929,472,2.113,475,1.098,476,3.125,477,2.203,478,2.203,479,3.344,480,3.344,481,3.344,482,3.344,483,1.181,484,2.631,485,2.801,486,2.801,487,1.846,488,2.801,489,2.852,490,2.852,491,2.852,492,2.852,493,1.675,494,2.852,495,2.085,496,2.852,497,2.852,498,2.852,499,1.31,500,2.631,501,2.296,502,2.631,503,2.203,504,1.31,505,1.31,506,1.31,507,1.31,508,1.31,509,1.31,510,1.31,511,1.31,512,1.31,513,1.31,514,1.31,515,1.31,516,1.31,517,1.31,518,1.31,519,1.31,520,1.846,521,2.801,522,1.31,523,1.611,524,1.31,525,1.31,526,1.31,527,1.31,528,1.31,529,1.31,530,1.31,531,1.31,532,1.31,533,1.31,534,1.31,535,1.31,536,1.31,537,0.958,538,0.77,539,2.852,540,1.31,541,1.31,542,1.31,543,2.203,544,1.31,545,1.31,546,2.203,547,1.31,548,1.31,549,1.31,550,2.852,551,1.31,552,1.31,553,1.31,554,1.31,555,1.31,556,2.203,557,1.31,558,1.31,559,2.203,560,1.31,561,1.31,562,1.846,563,1.31,564,1.31,565,1.31,566,1.31,567,0.958,568,0.958,569,1.31,570,2.726,571,3.247,572,2.203,573,1.295,574,1.611,575,3.73,576,3.344,577,1.435,578,1.31,579,1.31,580,2.852,581,1.31,582,1.31,583,1.098,584,1.31,585,1.31,586,1.31,587,1.31,588,1.31,589,1.31,590,0.958,591,1.31,592,0.958]],["title/components/LoginComponent.html",[0,0.283,80,0.829]],["body/components/LoginComponent.html",[0,0.48,1,0.756,2,0.224,3,0.191,4,1.117,5,1.117,6,1.117,7,0.159,9,1.453,10,1.818,11,1.117,12,2.198,13,1.155,14,1.453,16,1.453,18,0.224,19,0.982,20,1.973,21,0.52,22,0.616,25,0.905,26,0.031,27,1.702,28,0.876,29,0.496,30,0.191,31,0.06,62,0.955,63,1.571,64,1.453,65,1.571,66,1.973,67,1.117,68,0.539,69,1.117,70,0.818,71,1.117,72,0.818,73,1.117,74,0.818,75,1.117,76,0.756,77,1.117,78,0.818,79,1.117,80,1.335,81,1.117,82,0.756,83,0.832,84,1.117,85,0.818,86,0.818,87,1.117,88,0.698,89,0.955,90,1.117,91,0.019,92,0.019,95,0.905,103,0.452,104,0.478,105,0.452,118,0.955,135,2.758,169,0.756,173,0.963,186,1.243,188,1.429,189,1.571,190,2.677,197,1.429,282,3.005,283,3.032,370,3.773,473,2.137,483,1.969,484,3.542,502,3.673,538,1.717,571,2.677,573,1.717,577,1.903,593,2.449,594,4.111,595,4.111,596,5.161,597,2.449,598,3.097,599,4.111,600,2.923,601,2.923,602,2.893,603,2.923,604,2.137,605,2.923,606,2.923,607,2.923,608,2.923,609,2.449,610,2.923,611,2.923,612,2.923,613,3.005,614,3.005,615,2.923,616,4.111,617,2.923,618,2.677]],["title/classes/Question.html",[31,0.066,83,0.649]],["body/classes/Question.html",[2,0.3,3,0.255,7,0.212,18,0.3,21,0.633,22,0.695,26,0.03,30,0.255,31,0.102,68,0.443,83,1.012,91,0.023,92,0.023,95,1.101,100,1.248,103,0.605,104,0.617,105,0.605,483,2.729,493,3.608,619,3.279,620,6.141,621,5.03,622,5.145,623,5.145,624,3.913,625,3.913,626,3.913,627,3.913,628,3.913,629,3.913,630,3.913]],["title/components/QuestionDetailComponent.html",[0,0.283,82,0.829]],["body/components/QuestionDetailComponent.html",[0,0.406,1,0.508,2,0.15,3,0.128,4,0.751,5,0.751,6,0.751,7,0.107,9,1.081,10,1.437,11,0.751,12,2.022,13,1.063,14,1.081,16,1.081,18,0.15,19,0.731,20,1.623,21,0.387,22,0.683,25,1.217,26,0.031,27,2.29,28,0.865,29,0.334,30,0.128,31,0.04,62,0.642,63,1.17,64,1.081,65,1.17,66,1.623,67,0.751,68,0.426,69,0.751,70,0.549,71,0.751,72,0.549,73,0.751,74,0.549,75,0.751,76,0.508,77,0.751,78,0.549,79,0.751,80,0.508,81,0.751,82,1.098,83,1.252,84,0.751,85,0.549,86,0.549,87,0.751,88,0.469,89,0.642,90,0.751,91,0.014,92,0.014,93,2.244,95,0.674,101,1.437,103,0.304,104,0.512,105,0.304,118,0.642,136,3.104,144,2.721,162,3.175,168,1.436,169,1.19,171,2.495,173,0.398,184,1.798,186,0.926,188,0.961,189,1.17,192,2.237,193,1.437,196,1.279,197,0.961,200,1.993,207,1.993,208,2.01,210,2.237,231,2.721,245,0.813,257,1.279,262,1.375,351,3.957,368,1.279,469,1.798,476,1.646,485,3.557,486,3.557,501,2.721,537,1.436,562,1.646,583,1.646,592,3.104,631,3.248,632,1.646,633,3.061,634,3.061,635,4.246,636,4.246,637,4.875,638,4.246,639,4.246,640,4.246,641,3.557,642,4.246,643,3.557,644,4.246,645,1.964,646,4.265,647,4.246,648,5.091,649,3.061,650,3.061,651,1.964,652,1.964,653,1.964,654,1.964,655,1.964,656,1.964,657,1.964,658,1.964,659,1.964,660,1.964,661,1.964,662,1.964,663,1.964,664,1.964,665,1.964,666,3.061,667,1.646,668,3.761,669,3.761,670,1.964,671,1.964,672,1.964,673,3.061,674,1.964,675,3.761,676,1.964,677,1.964,678,1.964,679,1.964,680,1.964,681,1.964,682,1.964,683,1.964,684,1.964,685,1.964,686,1.964,687,1.964,688,1.964,689,1.964,690,3.061,691,1.964,692,1.964,693,1.964,694,3.061,695,3.061,696,3.061,697,3.061,698,3.061,699,3.061,700,3.061]],["title/classes/QuestionListItem.html",[31,0.066,701,1.883]],["body/classes/QuestionListItem.html",[2,0.304,3,0.259,7,0.215,18,0.304,21,0.638,22,0.683,26,0.029,30,0.259,31,0.103,68,0.449,86,1.724,91,0.023,92,0.023,95,1.11,100,1.226,101,2.304,103,0.614,104,0.606,105,0.614,231,3.222,483,2.701,621,5.163,622,5.163,623,5.163,631,3.294,701,2.964,702,3.323,703,3.966,704,3.966,705,3.966,706,3.966,707,3.966,708,3.966]],["title/components/QuestionListItemComponent.html",[0,0.283,85,0.897]],["body/components/QuestionListItemComponent.html",[0,0.456,1,0.66,2,0.195,3,0.166,4,0.975,5,0.975,6,0.975,7,0.138,9,1.318,10,1.685,11,0.975,12,2.142,13,1.126,14,1.318,16,1.318,18,0.195,19,0.89,20,1.853,21,0.472,22,0.646,25,1.135,26,0.031,27,2.136,28,0.824,29,0.433,30,0.166,31,0.052,62,0.834,63,1.425,64,1.318,65,1.425,66,1.853,67,0.975,68,0.61,69,0.975,70,0.714,71,0.975,72,0.714,73,0.975,74,0.714,75,0.975,76,0.66,77,0.975,78,0.714,79,0.975,80,0.66,81,0.975,82,0.66,83,1.227,84,0.975,85,1.357,86,1.819,87,0.975,88,0.609,89,0.834,90,0.975,91,0.02,92,0.017,95,0.821,100,0.693,101,1.685,103,0.75,104,0.519,105,0.75,138,3.158,147,1.499,169,0.964,173,0.755,195,2.429,231,1.993,262,1.676,349,4.254,368,1.661,465,2.137,487,3.125,488,3.125,493,2.59,501,2.88,520,3.125,521,4.063,523,1.865,537,1.865,590,3.222,631,3.111,646,4.663,701,2.849,709,2.137,710,3.729,711,3.729,712,4.849,713,4.063,714,3.729,715,2.551,716,3.729,717,2.551,718,2.551,719,2.551,720,2.551,721,3.729,722,2.551,723,3.729,724,2.551,725,4.408,726,2.551,727,2.551,728,2.551,729,3.125,730,3.729,731,3.729,732,3.729,733,3.729,734,3.729]],["title/injectables/QuestionService.html",[212,0.897,501,1.713]],["body/injectables/QuestionService.html",[2,0.298,3,0.177,7,0.147,13,0.503,18,0.207,19,0.93,21,0.492,22,0.623,25,1.35,26,0.031,28,0.934,29,0.46,30,0.177,31,0.055,68,0.623,83,1.285,86,1.276,91,0.025,92,0.018,100,0.981,101,2.217,103,0.877,104,0.583,105,0.851,106,1.217,113,2.269,118,1.273,169,1.289,173,0.923,186,1.813,193,1.488,199,1.979,208,1.447,212,1.276,217,2.081,218,1.447,219,2.665,221,2.081,231,2.665,232,2.081,233,2.823,235,1.217,236,1.035,237,2.437,238,1.904,239,1.324,240,1.324,241,1.447,242,1.591,243,1.447,244,1.447,245,2.064,246,2.049,247,1.324,248,1.217,249,1.324,250,1.447,251,1.217,252,1.447,253,1.324,254,1.447,255,1.447,256,3.333,257,2.969,259,2.846,260,2.665,261,2.536,264,1.591,266,1.979,267,2.269,284,1.591,472,1.121,493,2.288,501,2.081,590,2.846,592,1.979,631,3.029,641,3.262,643,3.262,701,1.591,713,3.262,735,1.979,736,3.894,737,2.708,738,3.894,739,2.708,740,3.894,741,3.894,742,2.708,743,3.894,744,2.708,745,3.894,746,2.708,747,2.708,748,2.708,749,3.894,750,2.708,751,2.708,752,2.708,753,2.708]],["title/components/SignupComponent.html",[0,0.283,88,0.765]],["body/components/SignupComponent.html",[0,0.465,1,0.695,2,0.206,3,0.175,4,1.027,5,1.027,6,1.027,7,0.146,9,1.368,10,1.735,11,1.027,12,2.164,13,1.137,14,1.368,16,1.368,18,0.206,19,0.925,20,1.899,21,0.49,22,0.64,25,0.999,26,0.031,27,1.603,28,0.844,29,0.456,30,0.253,31,0.055,33,1.75,34,1.964,62,0.878,63,1.48,64,1.368,65,1.48,66,1.899,67,1.027,68,0.514,69,1.027,70,0.752,71,1.027,72,0.752,73,1.027,74,0.752,75,1.027,76,0.695,77,1.027,78,0.752,79,1.027,80,0.695,81,1.027,82,0.695,83,0.784,84,1.027,85,0.752,86,0.752,87,1.027,88,1.186,89,1.484,90,1.027,91,0.018,92,0.018,95,0.852,100,0.719,103,0.416,104,0.529,105,0.416,135,2.656,169,0.695,173,0.544,186,1.171,188,1.314,189,1.48,197,1.314,236,1.735,262,1.207,276,1.75,282,2.831,283,3.094,469,1.579,483,1.88,484,3.43,502,3.573,538,1.579,567,1.964,568,1.964,570,1.964,571,2.522,573,1.579,574,1.964,577,1.75,597,2.251,598,3.022,602,2.765,604,1.964,613,2.831,614,2.831,618,2.957,754,1.964,755,3.245,756,3.245,757,3.632,758,3.4,759,3.873,760,3.804,761,3.873,762,2.687,763,2.687,764,2.687,765,2.687,766,2.687,767,2.687,768,1.579,769,3.804,770,2.251,771,2.251,772,2.251,773,2.251,774,2.251,775,2.251,776,2.251,777,2.251,778,2.251,779,2.251,780,2.251,781,2.251,782,2.251,783,2.251,784,2.251,785,2.251,786,4.969]],["title/classes/Subtopic.html",[31,0.066,472,1.327]],["body/classes/Subtopic.html",[2,0.326,3,0.277,7,0.231,18,0.326,21,0.667,22,0.678,26,0.03,30,0.277,31,0.108,68,0.482,91,0.024,92,0.024,95,1.16,100,1.235,103,0.658,104,0.602,105,0.658,472,2.182,483,2.681,493,3.616,495,4.585,787,3.563,788,6.272,789,4.253,790,4.253,791,4.253,792,4.253,793,4.253]],["title/injectables/SubtopicService.html",[212,0.897,500,2.087]],["body/injectables/SubtopicService.html",[2,0.267,3,0.228,7,0.189,13,0.648,18,0.267,19,1.108,21,0.587,22,0.591,25,1.31,26,0.031,28,0.983,29,0.592,30,0.228,31,0.071,68,0.591,91,0.027,92,0.021,100,0.862,103,0.86,104,0.582,105,0.807,106,1.567,169,1.437,173,0.939,186,1.681,189,1.774,193,1.774,212,1.459,217,2.48,218,1.864,219,2.971,221,2.48,232,2.48,233,3.093,235,1.567,236,1.333,237,2.787,238,2.27,239,1.706,240,1.706,241,1.864,242,2.049,243,1.864,244,1.864,245,1.444,246,2.085,247,1.706,248,1.567,249,1.706,250,1.864,251,1.567,252,1.864,253,1.706,254,1.864,255,1.864,260,1.864,264,2.049,472,2.464,500,3.022,794,2.55,795,4.641,796,3.488,797,4.641,798,3.488,799,4.641,800,3.488,801,3.488,802,2.923,803,2.55]],["title/classes/Topic.html",[31,0.066,446,1.568]],["body/classes/Topic.html",[2,0.339,3,0.288,7,0.24,18,0.339,21,0.683,22,0.66,26,0.03,30,0.288,31,0.111,68,0.501,91,0.025,92,0.025,95,1.188,100,1.218,103,0.684,104,0.586,105,0.684,446,2.641,483,2.621,495,4.55,804,3.706,805,6.332,806,4.423,807,4.423,808,4.423,809,4.423]],["title/injectables/TopicService.html",[212,0.897,451,1.883]],["body/injectables/TopicService.html",[2,0.254,3,0.216,7,0.18,13,0.615,18,0.254,19,1.07,21,0.567,22,0.616,25,1.342,26,0.031,28,0.966,29,0.562,30,0.216,31,0.068,68,0.575,91,0.027,92,0.02,100,0.832,103,0.842,104,0.572,105,0.786,106,1.488,169,1.408,173,1.028,186,1.773,189,1.266,193,1.713,212,1.421,217,2.395,218,1.77,219,2.909,221,2.395,232,2.395,233,3.04,235,1.488,236,1.266,237,2.715,238,2.192,239,1.62,240,1.62,241,1.77,243,1.77,244,1.77,245,1.371,246,2.014,247,1.62,248,1.488,249,1.62,250,1.77,251,1.488,252,1.77,253,1.62,254,1.77,255,1.77,260,2.395,262,1.488,446,2.982,451,2.633,472,1.371,803,2.421,810,2.421,811,4.482,812,5.443,813,3.312,814,4.482,815,3.312,816,4.482,817,3.312,818,3.312,819,3.312,820,3.312,821,3.312,822,3.312,823,3.312]],["title/classes/User.html",[31,0.066,602,1.568]],["body/classes/User.html",[2,0.3,3,0.255,7,0.212,18,0.3,21,0.633,22,0.695,26,0.03,30,0.255,31,0.102,68,0.443,91,0.023,92,0.023,95,1.101,100,1.248,103,0.605,104,0.617,105,0.605,483,2.729,602,2.446,758,3.608,824,3.279,825,6.141,826,6.141,827,6.141,828,6.004,829,3.913,830,3.913,831,3.913,832,3.913,833,3.913,834,3.913,835,3.913]],["title/injectables/UserService.html",[212,0.897,598,1.713]],["body/injectables/UserService.html",[2,0.247,3,0.21,7,0.175,13,0.598,18,0.247,19,1.05,21,0.556,22,0.609,25,1.333,26,0.031,28,0.957,29,0.547,30,0.21,31,0.066,68,0.609,91,0.027,92,0.02,100,0.817,103,0.871,104,0.585,105,0.832,106,1.447,169,1.391,173,0.652,186,1.758,189,2.057,193,1.681,212,1.401,217,2.351,218,1.722,219,2.876,221,2.351,232,2.351,233,3.011,235,1.447,236,1.231,237,2.677,238,2.151,239,1.575,240,1.575,241,1.722,242,1.892,243,1.722,244,1.722,245,1.334,246,2.25,247,1.575,248,1.447,249,1.575,250,1.722,251,1.447,252,1.722,253,1.575,254,1.722,255,1.722,260,2.351,261,2.098,262,1.447,264,1.892,283,1.892,370,2.355,598,2.351,602,3.039,618,2.098,757,3.934,802,3.685,803,3.215,836,2.355,837,4.398,838,4.398,839,3.221,840,4.398,841,3.221,842,4.398,843,3.221,844,3.221,845,3.221,846,3.221,847,3.221,848,3.221,849,3.221]],["title/interfaces/UserType.html",[758,1.883,768,1.883]],["body/interfaces/UserType.html",[0,0.41,2,0.267,3,0.228,7,0.189,9,1.233,10,1.774,12,1.233,13,0.648,14,1.233,16,1.233,18,0.267,20,1.333,21,0.441,25,0.768,26,0.031,28,0.944,29,0.592,30,0.303,31,0.071,33,2.272,34,2.55,88,0.833,89,1.14,91,0.021,92,0.021,95,1.021,100,1.105,104,0.524,135,1.864,169,0.902,173,0.706,186,1.404,188,1.706,189,1.774,197,1.706,236,2.275,262,1.567,276,2.272,283,2.049,469,2.049,483,1.444,484,2.272,502,3.022,538,2.049,567,2.55,568,2.55,570,2.55,571,3.022,573,2.049,574,2.55,577,2.272,598,2.787,602,2.83,604,2.55,613,3.392,614,3.392,618,2.272,754,2.55,755,2.923,756,2.923,757,2.55,758,3.266,760,2.923,768,2.726,769,4.986,770,2.923,771,2.923,772,2.923,773,2.923,774,2.923,775,2.923,776,2.923,777,2.923,778,2.923,779,2.923,780,2.923,781,2.923,782,2.923,783,2.923,784,2.923,785,2.923]],["title/coverage.html",[850,3.672]],["body/coverage.html",[0,0.545,1,0.806,7,0.169,8,2.613,26,0.031,31,0.123,70,0.873,72,0.873,74,0.873,76,0.806,78,0.873,80,0.806,82,0.806,83,0.631,85,0.873,86,1.378,88,0.745,91,0.02,92,0.02,93,1.192,94,2.613,104,0.314,119,2.613,123,1.401,143,1.667,144,1.667,173,0.631,212,1.611,213,3.145,246,2.587,272,2.613,308,2.28,349,2.28,351,2.031,355,2.28,356,2.613,373,2.613,385,2.613,422,3.145,442,2.613,446,1.525,451,1.832,472,1.291,475,2.613,500,2.031,501,1.667,573,3.934,593,2.613,598,1.667,602,1.525,619,2.613,631,2.976,632,2.613,701,1.832,702,2.613,709,2.613,735,3.145,754,3.145,758,1.832,768,1.832,787,2.613,794,3.145,804,2.613,810,3.145,824,2.613,836,3.145,850,2.613,851,3.119,852,3.119,853,3.119,854,4.924,855,5.757,856,4.514,857,6.175,858,5.569,859,3.119,860,3.119,861,3.119,862,3.119,863,3.119,864,4.302,865,3.119,866,3.119,867,4.302,868,2.613,869,3.604,870,2.613,871,3.604,872,2.613,873,3.119,874,3.119]],["title/dependencies.html",[287,2.512,875,2.673]],["body/dependencies.html",[26,0.031,29,0.774,91,0.025,92,0.025,240,2.23,287,2.97,301,4.608,302,3.582,306,3.82,368,2.97,538,2.679,667,3.82,876,4.56,877,4.56,878,4.56,879,5.5,880,6.507,881,4.56,882,4.56,883,4.56,884,4.56,885,4.56,886,4.56,887,4.56,888,4.56,889,4.56,890,4.56,891,4.56]],["title/index.html",[18,0.205,892,2.673,893,2.673]],["body/index.html",[0,0.478,3,0.246,7,0.205,13,0.7,26,0.022,50,4.092,68,0.427,83,0.989,91,0.022,92,0.022,93,1.867,101,1.442,123,1.695,173,0.763,195,2.456,199,4.445,253,3.027,276,3.96,277,4.801,278,4.539,281,3.16,298,2.757,314,4.973,343,2.757,446,1.844,472,2.022,523,2.757,609,3.16,894,3.771,895,4.884,896,5.73,897,5.417,898,3.771,899,3.771,900,3.771,901,4.884,902,6.189,903,3.771,904,3.771,905,3.771,906,3.771,907,3.771,908,3.771,909,3.771,910,3.771,911,3.771,912,5.936,913,3.771,914,3.771,915,3.771,916,3.771,917,3.771,918,3.771,919,3.16,920,4.884,921,5.936,922,4.884,923,4.884,924,3.771,925,5.73,926,3.771,927,3.771,928,5.417,929,3.771,930,3.771,931,4.884,932,4.884,933,3.771,934,3.771,935,3.771,936,4.884]],["title/modules.html",[285,2.144]],["body/modules.html",[26,0.027,91,0.027,92,0.027,285,2.487,286,3.311,295,2.988,302,3.311,729,4.26,937,5.085,938,5.085,939,5.866,940,5.085]],["title/overview.html",[941,3.672]],["body/overview.html",[0,0.355,1,1.444,26,0.03,30,0.262,31,0.082,62,1.314,70,1.562,72,1.757,74,1.562,76,1.444,78,1.562,80,1.444,82,1.444,85,1.562,88,1.333,91,0.023,92,0.023,118,1.314,212,1.125,285,2.489,286,4.386,287,2.618,288,3.368,289,3.368,290,3.368,291,3.368,292,3.368,293,3.368,294,3.368,295,3.28,296,4.263,297,3.368,298,2.939,367,2.618,473,2.939,768,2.362,941,3.368,942,4.02,943,4.02,944,4.02,945,4.02]],["title/routes.html",[367,2.854]],["body/routes.html",[26,0.027,91,0.027,92,0.027,367,3.4]],["title/miscellaneous/variables.html",[312,1.954,856,2.82]],["body/miscellaneous/variables.html",[18,0.261,26,0.031,91,0.021,92,0.021,104,0.652,171,2.006,173,1.197,184,2.688,213,2.496,235,2.794,236,2.377,238,2.893,246,2.945,247,2.893,248,2.658,249,2.893,308,3.771,312,2.496,422,2.496,631,1.825,735,3.344,794,2.496,810,2.496,836,2.496,856,2.496,868,2.86,869,4.955,870,2.86,871,2.86,872,4.322,919,3.833,946,4.575,947,3.414,948,3.414,949,3.414,950,3.414,951,3.414,952,3.414,953,3.414,954,3.414,955,3.414,956,3.414,957,6.511]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":573,"title":{},"body":{"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{},"coverage.html":{}}}],["0.8.26",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":118,"title":{},"body":{"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{},"overview.html":{}}}],["10",{"_index":942,"title":{},"body":{"overview.html":{}}}],["2",{"_index":473,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":474,"title":{},"body":{"components/DashboardComponent.html":{}}}],["5",{"_index":945,"title":{},"body":{"overview.html":{}}}],["5000",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["6",{"_index":943,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":899,"title":{},"body":{"index.html":{}}}],["6.1.9",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":944,"title":{},"body":{"overview.html":{}}}],["about'},{'nam",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["about.component.css",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.compon",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcompon",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accessor",{"_index":759,"title":{},"body":{"components/SignupComponent.html":{}}}],["activ",{"_index":479,"title":{},"body":{"components/EditorComponent.html":{}}}],["activatedrout",{"_index":647,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["activateeditor",{"_index":485,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["activatequestioneditor",{"_index":639,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["actual_compon",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["ad",{"_index":113,"title":{},"body":{"classes/Answer.html":{},"injectables/QuestionService.html":{}}}],["add",{"_index":210,"title":{},"body":{"components/AnswerComponent.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["addansw",{"_index":214,"title":{},"body":{"injectables/AnswerService.html":{}}}],["addanswer(inputansw",{"_index":222,"title":{},"body":{"injectables/AnswerService.html":{}}}],["addcom",{"_index":423,"title":{},"body":{"injectables/CommentService.html":{}}}],["addcomment(inputcom",{"_index":426,"title":{},"body":{"injectables/CommentService.html":{}}}],["addquest",{"_index":736,"title":{},"body":{"injectables/QuestionService.html":{}}}],["addquestion(inputquest",{"_index":738,"title":{},"body":{"injectables/QuestionService.html":{}}}],["address",{"_index":934,"title":{},"body":{"index.html":{}}}],["addsubtop",{"_index":795,"title":{},"body":{"injectables/SubtopicService.html":{}}}],["addsubtopic(inputsubtop",{"_index":797,"title":{},"body":{"injectables/SubtopicService.html":{}}}],["addtop",{"_index":811,"title":{},"body":{"injectables/TopicService.html":{}}}],["addtopic(inputtop",{"_index":814,"title":{},"body":{"injectables/TopicService.html":{}}}],["addus",{"_index":837,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(inputus",{"_index":840,"title":{},"body":{"injectables/UserService.html":{}}}],["admin",{"_index":774,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["admin(god",{"_index":775,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["agil",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["alert(\"error",{"_index":203,"title":{},"body":{"components/AnswerComponent.html":{}}}],["alert(\"even",{"_index":194,"title":{},"body":{"components/AnswerComponent.html":{}}}],["alert(\"mor",{"_index":204,"title":{},"body":{"components/AnswerComponent.html":{}}}],["alert(\"quest",{"_index":688,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["alert(\"som",{"_index":192,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["alert('even",{"_index":415,"title":{},"body":{"components/CommentComponent.html":{}}}],["alert(error",{"_index":576,"title":{},"body":{"components/EditorComponent.html":{}}}],["alert(respons",{"_index":687,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["and/or",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular/anim",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":667,"title":{},"body":{"components/QuestionDetailComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":239,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppModule.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["angular/compil",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"dependencies.html":{}}}],["angular/form",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":538,"title":{},"body":{"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divid",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expans",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":93,"title":{"classes/Answer.html":{}},"body":{"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["answer'},{'nam",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["answer(\"rollick",{"_index":558,"title":{},"body":{"components/EditorComponent.html":{}}}],["answer(this.currentanswer.answercr",{"_index":178,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.component.css",{"_index":120,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.component.html",{"_index":121,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.servic",{"_index":168,"title":{},"body":{"components/AnswerComponent.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["answer/answer.compon",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["answercompon",{"_index":70,"title":{"components/AnswerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["answercont",{"_index":96,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/EditorComponent.html":{}}}],["answercr",{"_index":97,"title":{},"body":{"classes/Answer.html":{},"components/EditorComponent.html":{}}}],["answereditor",{"_index":489,"title":{},"body":{"components/EditorComponent.html":{}}}],["answereditordisplay",{"_index":122,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answernumb",{"_index":98,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{}}}],["answerservic",{"_index":144,"title":{"injectables/AnswerService.html":{}},"body":{"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"coverage.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"index.html":{}}}],["app.compon",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":72,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":249,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["appmodul",{"_index":286,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":355,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":295,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifact",{"_index":913,"title":{},"body":{"index.html":{}}}],["asap",{"_index":730,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["automat",{"_index":907,"title":{},"body":{"index.html":{}}}],["avail",{"_index":729,"title":{},"body":{"components/QuestionListItemComponent.html":{},"modules.html":{}}}],["bar",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["basic",{"_index":750,"title":{},"body":{"injectables/QuestionService.html":{}}}],["boolean",{"_index":162,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["bootstrap",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bred",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{}}}],["breed",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{}}}],["brows",{"_index":939,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":361,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":912,"title":{},"body":{"index.html":{}}}],["built",{"_index":932,"title":{},"body":{"index.html":{}}}],["cancel",{"_index":207,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["case",{"_index":111,"title":{},"body":{"classes/Answer.html":{}}}],["catcherror",{"_index":241,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["catcherror(this.handleerror('ad",{"_index":264,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/UserService.html":{}}}],["catcherror(this.handleerror('cr",{"_index":823,"title":{},"body":{"injectables/TopicService.html":{}}}],["catcherror(this.handleerror('delet",{"_index":267,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["catcherror(this.handleerror('error",{"_index":440,"title":{},"body":{"injectables/CommentService.html":{}}}],["catcherror(this.handleerror('get",{"_index":261,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/UserService.html":{}}}],["catcherror(this.handleerror('gettopicsandsubtop",{"_index":820,"title":{},"body":{"injectables/TopicService.html":{}}}],["catcherror(this.handleerror('upd",{"_index":271,"title":{},"body":{"injectables/AnswerService.html":{}}}],["chang",{"_index":523,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionListItemComponent.html":{},"index.html":{}}}],["changes.subtopicname.currentvalu",{"_index":565,"title":{},"body":{"components/EditorComponent.html":{}}}],["changes.subtopicname.firstchang",{"_index":563,"title":{},"body":{"components/EditorComponent.html":{}}}],["check",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["class",{"_index":31,"title":{"classes/Answer.html":{},"classes/AppPage.html":{},"classes/Comment.html":{},"classes/Question.html":{},"classes/QuestionListItem.html":{},"classes/Subtopic.html":{},"classes/Topic.html":{},"classes/User.html":{}},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":897,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":909,"title":{},"body":{"index.html":{}}}],["comment",{"_index":123,"title":{"classes/Comment.html":{}},"body":{"components/AnswerComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["comment'},{'nam",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["comment(\"rollick",{"_index":561,"title":{},"body":{"components/EditorComponent.html":{}}}],["comment(this.currentcomment.commentcr",{"_index":409,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.css",{"_index":386,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":387,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.servic",{"_index":167,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["comment/comment.compon",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["commentcompon",{"_index":74,"title":{"components/CommentComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentcont",{"_index":374,"title":{},"body":{"classes/Comment.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{}}}],["commentcr",{"_index":375,"title":{},"body":{"classes/Comment.html":{},"components/EditorComponent.html":{}}}],["commenteditor",{"_index":490,"title":{},"body":{"components/EditorComponent.html":{}}}],["commentnumb",{"_index":376,"title":{},"body":{"classes/Comment.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{}}}],["commentsdisplay",{"_index":124,"title":{},"body":{"components/AnswerComponent.html":{}}}],["commentservic",{"_index":143,"title":{"injectables/CommentService.html":{}},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{},"coverage.html":{}}}],["complet",{"_index":196,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["const",{"_index":245,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppRoutingModule.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["constructor(answercr",{"_index":99,"title":{},"body":{"classes/Answer.html":{}}}],["constructor(commentcr",{"_index":377,"title":{},"body":{"classes/Comment.html":{}}}],["constructor(commentservic",{"_index":142,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{}}}],["constructor(http",{"_index":218,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["constructor(normalrout",{"_index":645,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["constructor(questioncr",{"_index":624,"title":{},"body":{"classes/Question.html":{}}}],["constructor(questionnumb",{"_index":703,"title":{},"body":{"classes/QuestionListItem.html":{}}}],["constructor(questionservic",{"_index":715,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["constructor(snackbar",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(subtopicnam",{"_index":789,"title":{},"body":{"classes/Subtopic.html":{}}}],["constructor(subtopicservic",{"_index":499,"title":{},"body":{"components/EditorComponent.html":{}}}],["constructor(topicnam",{"_index":806,"title":{},"body":{"classes/Topic.html":{}}}],["constructor(topicservic",{"_index":450,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(userrollnumb",{"_index":829,"title":{},"body":{"classes/User.html":{}}}],["content",{"_index":248,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cope",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["core",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":850,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":262,"title":{},"body":{"injectables/AnswerService.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["creation",{"_index":437,"title":{},"body":{"injectables/CommentService.html":{}}}],["currentansw",{"_index":139,"title":{},"body":{"components/AnswerComponent.html":{},"components/EditorComponent.html":{}}}],["currentanswer.answercont",{"_index":205,"title":{},"body":{"components/AnswerComponent.html":{}}}],["currentcom",{"_index":405,"title":{},"body":{"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["currentcomment.commentcont",{"_index":421,"title":{},"body":{"components/CommentComponent.html":{}}}],["currentdisplayedquestionlistitem",{"_index":712,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["currentquest",{"_index":480,"title":{},"body":{"components/EditorComponent.html":{}}}],["currentsubtop",{"_index":481,"title":{},"body":{"components/EditorComponent.html":{}}}],["currentsubtopicnam",{"_index":445,"title":{},"body":{"components/DashboardComponent.html":{}}}],["currenttop",{"_index":482,"title":{},"body":{"components/EditorComponent.html":{}}}],["custom",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"injectables/QuestionService.html":{}}}],["dashboard'},{'nam",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["dashboard.component.css",{"_index":443,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":444,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.compon",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboardcompon",{"_index":76,"title":{"components/DashboardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":848,"title":{},"body":{"injectables/UserService.html":{}}}],["deactiv",{"_index":674,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["deactivateeditor",{"_index":486,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["deactivateeditorrequest",{"_index":496,"title":{},"body":{"components/EditorComponent.html":{}}}],["deactivatequestioneditor",{"_index":640,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["declar",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":235,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["delet",{"_index":208,"title":{},"body":{"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{}}}],["deleteansw",{"_index":127,"title":{},"body":{"components/AnswerComponent.html":{},"injectables/AnswerService.html":{}}}],["deleteanswer(answernumb",{"_index":225,"title":{},"body":{"injectables/AnswerService.html":{}}}],["deletecom",{"_index":390,"title":{},"body":{"components/CommentComponent.html":{},"injectables/CommentService.html":{}}}],["deletecomment(commentnumb",{"_index":429,"title":{},"body":{"injectables/CommentService.html":{}}}],["deletequest",{"_index":641,"title":{},"body":{"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{}}}],["deletequestion(questionnumb",{"_index":741,"title":{},"body":{"injectables/QuestionService.html":{}}}],["depend",{"_index":287,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":592,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{}}}],["detail'},{'nam",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["detail.compon",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.css",{"_index":633,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.html",{"_index":634,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.t",{"_index":632,"title":{},"body":{"components/QuestionDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:112",{"_index":658,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:18",{"_index":665,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":664,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":663,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":661,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:22",{"_index":662,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":649,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":659,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:53",{"_index":656,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:61",{"_index":657,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:73",{"_index":660,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:77",{"_index":651,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:81",{"_index":653,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:85",{"_index":652,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:89",{"_index":654,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:93",{"_index":655,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["detail/quest",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuestionDetailComponent.html":{},"coverage.html":{}}}],["dev",{"_index":904,"title":{},"body":{"index.html":{}}}],["develop",{"_index":900,"title":{},"body":{"index.html":{}}}],["diagnost",{"_index":760,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["direct",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":911,"title":{},"body":{"index.html":{}}}],["directori",{"_index":916,"title":{},"body":{"index.html":{}}}],["discuss",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["display",{"_index":699,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["displayanswereditorform",{"_index":128,"title":{},"body":{"components/AnswerComponent.html":{}}}],["displaycom",{"_index":129,"title":{},"body":{"components/AnswerComponent.html":{}}}],["displayeditform",{"_index":391,"title":{},"body":{"components/CommentComponent.html":{}}}],["displayeditor",{"_index":130,"title":{},"body":{"components/AnswerComponent.html":{}}}],["dist",{"_index":915,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{}}}],["document",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["dog",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["done",{"_index":206,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{}}}],["durat",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["dure",{"_index":845,"title":{},"body":{"injectables/UserService.html":{}}}],["dynam",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":926,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.t",{"_index":356,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":360,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":359,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":936,"title":{},"body":{"index.html":{}}}],["edit",{"_index":200,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/QuestionDetailComponent.html":{}}}],["editableansw",{"_index":125,"title":{},"body":{"components/AnswerComponent.html":{}}}],["editablecom",{"_index":388,"title":{},"body":{"components/CommentComponent.html":{}}}],["editablequest",{"_index":635,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["editansw",{"_index":215,"title":{},"body":{"injectables/AnswerService.html":{}}}],["editanswer(answercont",{"_index":227,"title":{},"body":{"injectables/AnswerService.html":{}}}],["editcom",{"_index":424,"title":{},"body":{"injectables/CommentService.html":{}}}],["editcomment(commentcont",{"_index":431,"title":{},"body":{"injectables/CommentService.html":{}}}],["editformdisplay",{"_index":389,"title":{},"body":{"components/CommentComponent.html":{}}}],["editor",{"_index":476,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["editor'},{'nam",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["editor.component.css",{"_index":477,"title":{},"body":{"components/EditorComponent.html":{}}}],["editor.component.html",{"_index":478,"title":{},"body":{"components/EditorComponent.html":{}}}],["editor/editor.compon",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["editoractiv",{"_index":636,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["editorcompon",{"_index":78,"title":{"components/EditorComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editordisplay",{"_index":126,"title":{},"body":{"components/AnswerComponent.html":{}}}],["element",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["element(by.css('app",{"_index":362,"title":{},"body":{"classes/AppPage.html":{}}}],["empti",{"_index":254,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["end",{"_index":925,"title":{},"body":{"index.html":{}}}],["entri",{"_index":784,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["environ",{"_index":869,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":193,"title":{},"body":{"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["event",{"_index":147,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/QuestionListItemComponent.html":{}}}],["eventemitt",{"_index":148,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["except",{"_index":110,"title":{},"body":{"classes/Answer.html":{}}}],["execut",{"_index":922,"title":{},"body":{"index.html":{}}}],["exist",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["export",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"overview.html":{}}}],["fals",{"_index":171,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":669,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":918,"title":{},"body":{"index.html":{}}}],["form",{"_index":770,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["formsmodul",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":931,"title":{},"body":{"index.html":{}}}],["function",{"_index":112,"title":{},"body":{"classes/Answer.html":{}}}],["further",{"_index":927,"title":{},"body":{"index.html":{}}}],["gener",{"_index":896,"title":{},"body":{"index.html":{}}}],["get",{"_index":892,"title":{"index.html":{}},"body":{}}],["getalltopicsandsubtop",{"_index":812,"title":{},"body":{"injectables/TopicService.html":{}}}],["getansw",{"_index":216,"title":{},"body":{"injectables/AnswerService.html":{}}}],["getanswerdetail",{"_index":642,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["getanswers(questionnumb",{"_index":229,"title":{},"body":{"injectables/AnswerService.html":{}}}],["getcom",{"_index":131,"title":{},"body":{"components/AnswerComponent.html":{},"injectables/CommentService.html":{}}}],["getcomments(answernumb",{"_index":433,"title":{},"body":{"injectables/CommentService.html":{}}}],["getdiagnost",{"_index":766,"title":{},"body":{"components/SignupComponent.html":{}}}],["getparagraphtext",{"_index":357,"title":{},"body":{"classes/AppPage.html":{}}}],["getquestiondetail",{"_index":643,"title":{},"body":{"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{}}}],["getquestiondetails(questionnumb",{"_index":743,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getquestionlistitem",{"_index":713,"title":{},"body":{"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{}}}],["getquestionlistitems(subtopicnam",{"_index":745,"title":{},"body":{"injectables/QuestionService.html":{}}}],["gettopicsandsubtop",{"_index":447,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getus",{"_index":838,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(inputus",{"_index":842,"title":{},"body":{"injectables/UserService.html":{}}}],["gharat",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["go",{"_index":929,"title":{},"body":{"index.html":{}}}],["goback",{"_index":644,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["goe",{"_index":419,"title":{},"body":{"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["graph",{"_index":940,"title":{},"body":{"modules.html":{}}}],["h1')).gettext",{"_index":363,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":109,"title":{},"body":{"classes/Answer.html":{}}}],["handleerror",{"_index":217,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["handleerror(oper",{"_index":232,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["head",{"_index":554,"title":{},"body":{"components/EditorComponent.html":{}}}],["header",{"_index":247,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["hello123",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["help",{"_index":928,"title":{},"body":{"index.html":{}}}],["hide",{"_index":211,"title":{},"body":{"components/AnswerComponent.html":{}}}],["hideanswereditorform",{"_index":132,"title":{},"body":{"components/AnswerComponent.html":{}}}],["hidecom",{"_index":133,"title":{},"body":{"components/AnswerComponent.html":{}}}],["hideeditform",{"_index":392,"title":{},"body":{"components/CommentComponent.html":{}}}],["hideeditor",{"_index":134,"title":{},"body":{"components/AnswerComponent.html":{}}}],["html",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["http",{"_index":221,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000/api/answ",{"_index":265,"title":{},"body":{"injectables/AnswerService.html":{}}}],["http://localhost:3000/api/answers?questionnumb",{"_index":258,"title":{},"body":{"injectables/AnswerService.html":{}}}],["http://localhost:3000/api/com",{"_index":439,"title":{},"body":{"injectables/CommentService.html":{}}}],["http://localhost:3000/api/comments/${commentnumb",{"_index":441,"title":{},"body":{"injectables/CommentService.html":{}}}],["http://localhost:3000/api/comments?answernumb",{"_index":436,"title":{},"body":{"injectables/CommentService.html":{}}}],["http://localhost:3000/api/quest",{"_index":749,"title":{},"body":{"injectables/QuestionService.html":{}}}],["http://localhost:3000/api/questions?getbasicinfo=true&subtopicnam",{"_index":752,"title":{},"body":{"injectables/QuestionService.html":{}}}],["http://localhost:4200",{"_index":906,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":219,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["httpclientmodul",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":238,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["httpoption",{"_index":246,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hunt",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["identifi",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["if(answernumb",{"_index":116,"title":{},"body":{"classes/Answer.html":{}}}],["if(commentnumb",{"_index":383,"title":{},"body":{"classes/Comment.html":{}}}],["if(respons",{"_index":190,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{}}}],["if(this.answereditor",{"_index":582,"title":{},"body":{"components/EditorComponent.html":{}}}],["if(this.commenteditor",{"_index":586,"title":{},"body":{"components/EditorComponent.html":{}}}],["iit2016067",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{}}}],["iit2016074",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["iit2016076",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["inform",{"_index":700,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["inject",{"_index":212,"title":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":138,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/QuestionListItemComponent.html":{}}}],["input('com",{"_index":404,"title":{},"body":{"components/CommentComponent.html":{}}}],["inputansw",{"_index":224,"title":{},"body":{"injectables/AnswerService.html":{},"components/EditorComponent.html":{}}}],["inputcom",{"_index":428,"title":{},"body":{"injectables/CommentService.html":{},"components/EditorComponent.html":{}}}],["inputquest",{"_index":740,"title":{},"body":{"injectables/QuestionService.html":{}}}],["inputsubtop",{"_index":799,"title":{},"body":{"injectables/SubtopicService.html":{}}}],["inputtop",{"_index":816,"title":{},"body":{"injectables/TopicService.html":{}}}],["inputus",{"_index":757,"title":{},"body":{"components/SignupComponent.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["interfac",{"_index":768,"title":{"interfaces/UserType.html":{}},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{},"coverage.html":{},"overview.html":{}}}],["inu",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["item",{"_index":590,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{}}}],["item'},{'nam",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["item.compon",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":710,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["item.component.html",{"_index":711,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["item.component.t",{"_index":709,"title":{},"body":{"components/QuestionListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:13",{"_index":717,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["item.component.ts:14",{"_index":716,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["item.component.ts:21",{"_index":720,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["item.component.ts:25",{"_index":719,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["item.component.ts:29",{"_index":718,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["item.component.ts:34",{"_index":724,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["item.component.ts:38",{"_index":722,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["item.t",{"_index":702,"title":{},"body":{"classes/QuestionListItem.html":{},"coverage.html":{}}}],["item.ts:1",{"_index":704,"title":{},"body":{"classes/QuestionListItem.html":{}}}],["item.ts:3",{"_index":707,"title":{},"body":{"classes/QuestionListItem.html":{}}}],["item.ts:4",{"_index":706,"title":{},"body":{"classes/QuestionListItem.html":{}}}],["item.ts:5",{"_index":708,"title":{},"body":{"classes/QuestionListItem.html":{}}}],["item.ts:6",{"_index":705,"title":{},"body":{"classes/QuestionListItem.html":{}}}],["item/quest",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"components/QuestionListItemComponent.html":{},"coverage.html":{}}}],["japan",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{}}}],["js",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(this.inputus",{"_index":785,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["karma",{"_index":924,"title":{},"body":{"index.html":{}}}],["keep",{"_index":252,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["later",{"_index":772,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["legend",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["list",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["locat",{"_index":648,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["login",{"_index":370,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'nam",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["login.component.css",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login/sign",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["logincompon",{"_index":80,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginus",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["maana",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/EditorComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["maanas@gmail.com",{"_index":780,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["made",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{}}}],["make",{"_index":562,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["map",{"_index":242,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/UserService.html":{}}}],["matbuttonmodul",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialogmodul",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodul",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["material.angular.io",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodul",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodul",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodul",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodul",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodul",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodul",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":502,"title":{},"body":{"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["matsnackbarmodul",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["menu",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":269,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["method",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"classes/AppPage.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["miscellan",{"_index":312,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["modul",{"_index":285,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":195,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/QuestionListItemComponent.html":{},"index.html":{}}}],["mountain",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{}}}],["name",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navig",{"_index":905,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":358,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":173,"title":{},"body":{"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":188,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["ng",{"_index":902,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchang",{"_index":487,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionListItemComponent.html":{}}}],["ngonchanges(chang",{"_index":520,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionListItemComponent.html":{}}}],["ngoninit",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["nitin",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["normalrout",{"_index":650,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["number",{"_index":101,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/Comment.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"index.html":{}}}],["object",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":186,"title":{},"body":{"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["observable.subscribe(observ",{"_index":197,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["occur",{"_index":690,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["of(respons",{"_index":803,"title":{},"body":{"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["of(result",{"_index":255,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["okay",{"_index":571,"title":{},"body":{"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["onselectsubtop",{"_index":448,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onselectsubtopic(selectedsubtopicnam",{"_index":455,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onsubmit",{"_index":135,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["onto",{"_index":751,"title":{},"body":{"injectables/QuestionService.html":{}}}],["oper",{"_index":237,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["option",{"_index":105,"title":{},"body":{"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["origin",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{}}}],["out",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":140,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["overview",{"_index":941,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":875,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":103,"title":{},"body":{"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["parammap",{"_index":666,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["parseint(params.get('questionnumb",{"_index":671,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["particular",{"_index":256,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{}}}],["password",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["password123",{"_index":779,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["path",{"_index":369,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":260,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["portal",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["post",{"_index":567,"title":{},"body":{"components/EditorComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["privat",{"_index":169,"title":{},"body":{"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["problem",{"_index":692,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["prod",{"_index":917,"title":{},"body":{"index.html":{}}}],["product",{"_index":919,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":895,"title":{},"body":{"index.html":{}}}],["properti",{"_index":95,"title":{},"body":{"classes/Answer.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"classes/Topic.html":{},"classes/User.html":{},"interfaces/UserType.html":{}}}],["protractor",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":250,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["public",{"_index":483,"title":{},"body":{"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"classes/QuestionListItem.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"classes/Topic.html":{},"classes/User.html":{},"interfaces/UserType.html":{}}}],["purpos",{"_index":935,"title":{},"body":{"index.html":{}}}],["queri",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["question",{"_index":83,"title":{"classes/Question.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{}}}],["question(\"rollick",{"_index":552,"title":{},"body":{"components/EditorComponent.html":{}}}],["questioncont",{"_index":620,"title":{},"body":{"classes/Question.html":{}}}],["questioncr",{"_index":621,"title":{},"body":{"classes/Question.html":{},"classes/QuestionListItem.html":{}}}],["questiondetail",{"_index":637,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["questiondetailcompon",{"_index":82,"title":{"components/QuestionDetailComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questiondetails.questioncont",{"_index":697,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["questiondetails.questioncr",{"_index":696,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["questiondetails.questionhead",{"_index":694,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["questiondetails.questionsubhead",{"_index":695,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["questioneditor",{"_index":491,"title":{},"body":{"components/EditorComponent.html":{}}}],["questioneditoractiv",{"_index":638,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["questionhead",{"_index":622,"title":{},"body":{"classes/Question.html":{},"classes/QuestionListItem.html":{}}}],["questionlistitem",{"_index":701,"title":{"classes/QuestionListItem.html":{}},"body":{"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["questionlistitem.questioncr",{"_index":732,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["questionlistitem.questionhead",{"_index":731,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["questionlistitem.questionsubhead",{"_index":733,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["questionlistitemcompon",{"_index":85,"title":{"components/QuestionListItemComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questionnumb",{"_index":231,"title":{},"body":{"injectables/AnswerService.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{}}}],["questions/:questionnumb",{"_index":371,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["questionservic",{"_index":501,"title":{"injectables/QuestionService.html":{}},"body":{"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["questionsubhead",{"_index":623,"title":{},"body":{"classes/Question.html":{},"classes/QuestionListItem.html":{}}}],["read",{"_index":734,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["readm",{"_index":930,"title":{},"body":{"index.html":{}}}],["readmor",{"_index":714,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["readmore(questionnumb",{"_index":721,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["refresh",{"_index":467,"title":{},"body":{"components/DashboardComponent.html":{}}}],["refreshansw",{"_index":136,"title":{},"body":{"components/AnswerComponent.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["refreshanswersrequest",{"_index":141,"title":{},"body":{"components/AnswerComponent.html":{},"components/EditorComponent.html":{}}}],["refreshcom",{"_index":137,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["refreshcommentsrequest",{"_index":393,"title":{},"body":{"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["refreshdashboardsidenav",{"_index":449,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditorComponent.html":{}}}],["refreshdashboardsidenav($ev",{"_index":458,"title":{},"body":{"components/DashboardComponent.html":{}}}],["refreshdashboardsidenavrequest",{"_index":497,"title":{},"body":{"components/EditorComponent.html":{}}}],["refreshquestionlistitem",{"_index":488,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionListItemComponent.html":{}}}],["refreshquestionlistitems($ev",{"_index":723,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["refreshquestionlistitemsrequest",{"_index":498,"title":{},"body":{"components/EditorComponent.html":{}}}],["reload",{"_index":908,"title":{},"body":{"index.html":{}}}],["remov",{"_index":771,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["request",{"_index":568,"title":{},"body":{"components/EditorComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["requir",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respons",{"_index":189,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/SignupComponent.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["result",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"classes/AppPage.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["reusabl",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["root",{"_index":251,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["root'},{'nam",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["rout",{"_index":367,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":646,"title":{},"body":{"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{}}}],["routermodul",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":372,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":253,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["rxj",{"_index":240,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":244,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["scaffold",{"_index":910,"title":{},"body":{"index.html":{}}}],["search",{"_index":748,"title":{},"body":{"injectables/QuestionService.html":{}}}],["selectedsubtopicnam",{"_index":457,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["seriou",{"_index":691,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["serv",{"_index":903,"title":{},"body":{"index.html":{}}}],["server",{"_index":901,"title":{},"body":{"index.html":{}}}],["service.servic",{"_index":537,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{}}}],["service.service.t",{"_index":735,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["service.service.ts:16",{"_index":737,"title":{},"body":{"injectables/QuestionService.html":{}}}],["service.service.ts:21",{"_index":747,"title":{},"body":{"injectables/QuestionService.html":{}}}],["service.service.ts:29",{"_index":744,"title":{},"body":{"injectables/QuestionService.html":{}}}],["service.service.ts:38",{"_index":746,"title":{},"body":{"injectables/QuestionService.html":{}}}],["service.service.ts:47",{"_index":739,"title":{},"body":{"injectables/QuestionService.html":{}}}],["service.service.ts:55",{"_index":742,"title":{},"body":{"injectables/QuestionService.html":{}}}],["session",{"_index":849,"title":{},"body":{"injectables/UserService.html":{}}}],["share",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{}}}],["shiba",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{}}}],["sidenav",{"_index":468,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sign",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["signup",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["signup.component.css",{"_index":755,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["signup.component.html",{"_index":756,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["signup/signup.compon",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["signupcompon",{"_index":88,"title":{"components/SignupComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{},"coverage.html":{},"overview.html":{}}}],["simplechang",{"_index":521,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionListItemComponent.html":{}}}],["six",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["small",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["smallest",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{}}}],["snackbar",{"_index":484,"title":{},"body":{"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"index.html":{}}}],["spa",{"_index":933,"title":{},"body":{"index.html":{}}}],["spec\\.t",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spitz",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/.../answer.service.t",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../comment.service.t",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../question",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subtopic.service.t",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../topic.service.t",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.t",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/about/about.component.t",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:12",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:8",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/answer.service.t",{"_index":213,"title":{},"body":{"injectables/AnswerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/answer.service.ts:15",{"_index":220,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/answer.service.ts:21",{"_index":234,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/answer.service.ts:29",{"_index":230,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/answer.service.ts:38",{"_index":223,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/answer.service.ts:46",{"_index":226,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/answer.service.ts:55",{"_index":228,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/answer.t",{"_index":94,"title":{},"body":{"classes/Answer.html":{},"coverage.html":{}}}],["src/app/answer.ts:2",{"_index":108,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/answer.ts:3",{"_index":107,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/answer.ts:4",{"_index":102,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/answer/answer.component.t",{"_index":119,"title":{},"body":{"components/AnswerComponent.html":{},"coverage.html":{}}}],["src/app/answer/answer.component.ts:14",{"_index":146,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:16",{"_index":149,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:18",{"_index":165,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:19",{"_index":164,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:20",{"_index":166,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:21",{"_index":163,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:23",{"_index":145,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:33",{"_index":158,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:40",{"_index":154,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:45",{"_index":153,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:49",{"_index":157,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:53",{"_index":152,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:57",{"_index":156,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:61",{"_index":161,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:65",{"_index":160,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:69",{"_index":150,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:84",{"_index":151,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:88",{"_index":155,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:94",{"_index":159,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/app",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/comment.service.t",{"_index":422,"title":{},"body":{"injectables/CommentService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/comment.service.ts:15",{"_index":425,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/comment.service.ts:21",{"_index":435,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/comment.service.ts:29",{"_index":434,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/comment.service.ts:38",{"_index":427,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/comment.service.ts:45",{"_index":430,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/comment.service.ts:53",{"_index":432,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/comment.t",{"_index":373,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["src/app/comment.ts:2",{"_index":380,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/comment.ts:3",{"_index":379,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/comment.ts:4",{"_index":378,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/comment/comment.component.t",{"_index":385,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["src/app/comment/comment.component.ts:12",{"_index":395,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:13",{"_index":396,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:15",{"_index":403,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:16",{"_index":394,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:25",{"_index":400,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:29",{"_index":398,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:33",{"_index":399,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:38",{"_index":397,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:54",{"_index":401,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:71",{"_index":402,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/dashboard/dashboard.component.t",{"_index":442,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:11",{"_index":460,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:12",{"_index":452,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:20",{"_index":456,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:24",{"_index":453,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:29",{"_index":454,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:34",{"_index":459,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/editor/editor.component.t",{"_index":475,"title":{},"body":{"components/EditorComponent.html":{},"coverage.html":{}}}],["src/app/editor/editor.component.ts:212",{"_index":528,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:217",{"_index":529,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:222",{"_index":526,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:227",{"_index":527,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:23",{"_index":511,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:24",{"_index":509,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:25",{"_index":507,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:26",{"_index":504,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:27",{"_index":506,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:29",{"_index":512,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:30",{"_index":510,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:31",{"_index":508,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:32",{"_index":505,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:34",{"_index":516,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:35",{"_index":517,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:36",{"_index":513,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:37",{"_index":514,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:38",{"_index":515,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:40",{"_index":533,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:41",{"_index":534,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:42",{"_index":532,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:43",{"_index":530,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:44",{"_index":531,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:46",{"_index":503,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:54",{"_index":535,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:63",{"_index":524,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:77",{"_index":522,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:84",{"_index":518,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:88",{"_index":519,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/editor/editor.component.ts:96",{"_index":525,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/login/login.component.t",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:13",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:25",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/quest",{"_index":631,"title":{},"body":{"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/question.t",{"_index":619,"title":{},"body":{"classes/Question.html":{},"coverage.html":{}}}],["src/app/question.ts:1",{"_index":625,"title":{},"body":{"classes/Question.html":{}}}],["src/app/question.ts:3",{"_index":627,"title":{},"body":{"classes/Question.html":{}}}],["src/app/question.ts:4",{"_index":630,"title":{},"body":{"classes/Question.html":{}}}],["src/app/question.ts:5",{"_index":628,"title":{},"body":{"classes/Question.html":{}}}],["src/app/question.ts:6",{"_index":629,"title":{},"body":{"classes/Question.html":{}}}],["src/app/question.ts:7",{"_index":626,"title":{},"body":{"classes/Question.html":{}}}],["src/app/signup/signup.component.t",{"_index":754,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{},"coverage.html":{}}}],["src/app/signup/signup.component.ts:19",{"_index":765,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:20",{"_index":761,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:23",{"_index":764,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:33",{"_index":762,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:36",{"_index":763,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:54",{"_index":767,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/subtopic.service.t",{"_index":794,"title":{},"body":{"injectables/SubtopicService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/subtopic.service.ts:15",{"_index":796,"title":{},"body":{"injectables/SubtopicService.html":{}}}],["src/app/subtopic.service.ts:21",{"_index":800,"title":{},"body":{"injectables/SubtopicService.html":{}}}],["src/app/subtopic.service.ts:28",{"_index":798,"title":{},"body":{"injectables/SubtopicService.html":{}}}],["src/app/subtopic.t",{"_index":787,"title":{},"body":{"classes/Subtopic.html":{},"coverage.html":{}}}],["src/app/subtopic.ts:1",{"_index":790,"title":{},"body":{"classes/Subtopic.html":{}}}],["src/app/subtopic.ts:3",{"_index":792,"title":{},"body":{"classes/Subtopic.html":{}}}],["src/app/subtopic.ts:4",{"_index":791,"title":{},"body":{"classes/Subtopic.html":{}}}],["src/app/subtopic.ts:5",{"_index":793,"title":{},"body":{"classes/Subtopic.html":{}}}],["src/app/topic.service.t",{"_index":810,"title":{},"body":{"injectables/TopicService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/topic.service.ts:14",{"_index":813,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/topic.service.ts:20",{"_index":818,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/topic.service.ts:28",{"_index":817,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/topic.service.ts:36",{"_index":815,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/topic.t",{"_index":804,"title":{},"body":{"classes/Topic.html":{},"coverage.html":{}}}],["src/app/topic.ts:1",{"_index":807,"title":{},"body":{"classes/Topic.html":{}}}],["src/app/topic.ts:3",{"_index":809,"title":{},"body":{"classes/Topic.html":{}}}],["src/app/topic.ts:4",{"_index":808,"title":{},"body":{"classes/Topic.html":{}}}],["src/app/user.service.t",{"_index":836,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/user.service.ts:14",{"_index":839,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:19",{"_index":844,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:27",{"_index":841,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:37",{"_index":843,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.t",{"_index":824,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:1",{"_index":830,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":834,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:5",{"_index":833,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:6",{"_index":832,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:7",{"_index":831,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:8",{"_index":835,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.t",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":893,"title":{"index.html":{}},"body":{}}],["statement",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":914,"title":{},"body":{"index.html":{}}}],["string",{"_index":100,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"classes/Question.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["student",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{},"index.html":{}}}],["student(gandu",{"_index":776,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["studentdiscussionportalfrontend",{"_index":894,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["subhead",{"_index":555,"title":{},"body":{"components/EditorComponent.html":{}}}],["submit",{"_index":469,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["subscribe((com",{"_index":182,"title":{},"body":{"components/AnswerComponent.html":{}}}],["subscribe((result",{"_index":465,"title":{},"body":{"components/DashboardComponent.html":{},"components/QuestionListItemComponent.html":{}}}],["subscript",{"_index":577,"title":{},"body":{"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["subtop",{"_index":472,"title":{"classes/Subtopic.html":{}},"body":{"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"injectables/QuestionService.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"coverage.html":{},"index.html":{}}}],["subtopic(\"sub123",{"_index":548,"title":{},"body":{"components/EditorComponent.html":{}}}],["subtopic.servic",{"_index":536,"title":{},"body":{"components/EditorComponent.html":{}}}],["subtopiccr",{"_index":788,"title":{},"body":{"classes/Subtopic.html":{}}}],["subtopiceditor",{"_index":492,"title":{},"body":{"components/EditorComponent.html":{}}}],["subtopicnam",{"_index":493,"title":{},"body":{"components/EditorComponent.html":{},"classes/Question.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"classes/Subtopic.html":{}}}],["subtopicservic",{"_index":500,"title":{"injectables/SubtopicService.html":{}},"body":{"components/EditorComponent.html":{},"injectables/SubtopicService.html":{},"coverage.html":{}}}],["successfullysubmit",{"_index":782,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["support",{"_index":937,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":938,"title":{},"body":{"modules.html":{}}}],["swapnil",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{}}}],["t",{"_index":233,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["tabl",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":243,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["tap(funct",{"_index":802,"title":{},"body":{"injectables/SubtopicService.html":{},"injectables/UserService.html":{}}}],["tap(function(respons",{"_index":822,"title":{},"body":{"injectables/TopicService.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["terrain",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{}}}],["test",{"_index":921,"title":{},"body":{"index.html":{}}}],["this.activ",{"_index":539,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.answ",{"_index":677,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.answercont",{"_index":115,"title":{},"body":{"classes/Answer.html":{}}}],["this.answercr",{"_index":114,"title":{},"body":{"classes/Answer.html":{}}}],["this.answereditor",{"_index":556,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.answereditordisplay",{"_index":176,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.answernumb",{"_index":117,"title":{},"body":{"classes/Answer.html":{},"components/EditorComponent.html":{}}}],["this.answerservice.addanswer(inputansw",{"_index":585,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.answerservice.deleteanswer(this.currentanswer.answernumb",{"_index":187,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.answerservice.editanswer(this.editableanswer.answercont",{"_index":201,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.answerservice.getanswers(this.questionnumber).subscrib",{"_index":676,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.com",{"_index":183,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.commentcont",{"_index":382,"title":{},"body":{"classes/Comment.html":{}}}],["this.commentcr",{"_index":381,"title":{},"body":{"classes/Comment.html":{}}}],["this.commenteditor",{"_index":559,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.commentnumb",{"_index":384,"title":{},"body":{"classes/Comment.html":{}}}],["this.commentsdisplay",{"_index":170,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.commentservice.addcomment(inputcom",{"_index":588,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.commentservice.deletecomment(this.currentcomment.commentnumb",{"_index":413,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentservice.editcomment(this.editablecomment.commentcont",{"_index":417,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentservice.getcomments(this.currentanswer.answernumb",{"_index":181,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.currentansw",{"_index":557,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.currentanswer.answercont",{"_index":179,"title":{},"body":{"components/AnswerComponent.html":{},"components/EditorComponent.html":{}}}],["this.currentanswer.answercr",{"_index":584,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.currentanswer.answernumb",{"_index":180,"title":{},"body":{"components/AnswerComponent.html":{},"components/EditorComponent.html":{}}}],["this.currentcom",{"_index":560,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.currentcomment.commentcont",{"_index":410,"title":{},"body":{"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["this.currentcomment.commentcr",{"_index":587,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.currentcomment.commentnumb",{"_index":411,"title":{},"body":{"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["this.currentdisplayedquestionlistitem",{"_index":727,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["this.currentquest",{"_index":551,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.currentquestion.subtopicnam",{"_index":564,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.currentsubtop",{"_index":547,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.currentsubtopicnam",{"_index":463,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.currenttop",{"_index":544,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.deactivateeditor",{"_index":580,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.deactivateeditorrequest",{"_index":542,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.deactivateeditorrequest.emit(tru",{"_index":566,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.editableansw",{"_index":177,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.editableanswer.answercont",{"_index":198,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.editableanswer.answernumb",{"_index":202,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.editablecom",{"_index":408,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.editablecomment.commentcont",{"_index":412,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.editablecomment.commentnumb",{"_index":418,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.editablequest",{"_index":680,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.editformdisplay",{"_index":407,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.editoractiv",{"_index":675,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.editordisplay",{"_index":175,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.getanswerdetail",{"_index":673,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.getcom",{"_index":174,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.getquestiondetail",{"_index":672,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.getquestionlistitem",{"_index":725,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["this.gettopicsandsubtop",{"_index":466,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.http.delete(url",{"_index":266,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{}}}],["this.http.get(\"http://localhost:3000/api/topics?getallsubtopics=tru",{"_index":819,"title":{},"body":{"injectables/TopicService.html":{}}}],["this.http.get(url",{"_index":259,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{}}}],["this.http.post(\"http://localhost:3000/api/subtop",{"_index":801,"title":{},"body":{"injectables/SubtopicService.html":{}}}],["this.http.post(\"http://localhost:3000/api/top",{"_index":821,"title":{},"body":{"injectables/TopicService.html":{}}}],["this.http.post(\"http://localhost:3000/api/us",{"_index":846,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(\"http://localhost:3000/login",{"_index":847,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post('http://localhost:3000/api/answ",{"_index":263,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.post('http://localhost:3000/api/com",{"_index":438,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.post('http://localhost:3000/api/quest",{"_index":753,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.put(url",{"_index":270,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{}}}],["this.inputus",{"_index":777,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["this.location.back",{"_index":693,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.loginus",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.normalrouter.navigate(['/dashboard",{"_index":689,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questiondetail",{"_index":679,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questiondetails.questioncont",{"_index":685,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questiondetails.questioncr",{"_index":681,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questiondetails.questionhead",{"_index":683,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questiondetails.questionsubhead",{"_index":684,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questiondetails.subtopicnam",{"_index":682,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questioneditor",{"_index":550,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.questioneditoractiv",{"_index":668,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questionnumb",{"_index":583,"title":{},"body":{"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["this.questionservice.addquestion(this.currentquest",{"_index":579,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.questionservice.deletequestion(this.questionnumb",{"_index":686,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questionservice.getquestiondetails(this.questionnumber).subscrib",{"_index":678,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questionservice.getquestionlistitems(this.subtopicnam",{"_index":726,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["this.refreshansw",{"_index":191,"title":{},"body":{"components/AnswerComponent.html":{},"components/EditorComponent.html":{}}}],["this.refreshanswersrequest",{"_index":172,"title":{},"body":{"components/AnswerComponent.html":{},"components/EditorComponent.html":{}}}],["this.refreshanswersrequest.emit(tru",{"_index":185,"title":{},"body":{"components/AnswerComponent.html":{},"components/EditorComponent.html":{}}}],["this.refreshcom",{"_index":414,"title":{},"body":{"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["this.refreshcommentsrequest",{"_index":406,"title":{},"body":{"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["this.refreshcommentsrequest.emit(tru",{"_index":420,"title":{},"body":{"components/CommentComponent.html":{},"components/EditorComponent.html":{}}}],["this.refreshdashboardsidenav",{"_index":572,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.refreshdashboardsidenavrequest",{"_index":540,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.refreshdashboardsidenavrequest.emit(tru",{"_index":589,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.refreshquestionlistitem",{"_index":581,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.refreshquestionlistitemsrequest",{"_index":541,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.refreshquestionlistitemsrequest.emit(tru",{"_index":591,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.router.navigate(['/quest",{"_index":728,"title":{},"body":{"components/QuestionListItemComponent.html":{}}}],["this.router.parammap.subscribe((param",{"_index":670,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.snackbar.open(\"correct",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.snackbar.open(\"dupl",{"_index":574,"title":{},"body":{"components/EditorComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["this.snackbar.open(\"incorrect",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.snackbar.open(\"new",{"_index":570,"title":{},"body":{"components/EditorComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["this.snackbar.open(\"som",{"_index":575,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.subtopiceditor",{"_index":546,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.subtopicnam",{"_index":553,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.subtopicservice.addsubtopic(this.currentsubtop",{"_index":569,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.top",{"_index":462,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.topiceditor",{"_index":543,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.topicnam",{"_index":549,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.topicservice.addtopic(this.currenttop",{"_index":578,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.topicservice.getalltopicsandsubtop",{"_index":464,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.userservice.adduser(this.inputus",{"_index":783,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["this.userservice.getuser(this.loginus",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usertyp",{"_index":773,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["this.usertypes[0].valu",{"_index":781,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["titl",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["topic",{"_index":446,"title":{"classes/Topic.html":{}},"body":{"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"coverage.html":{},"index.html":{}}}],["topic(\"top123",{"_index":545,"title":{},"body":{"components/EditorComponent.html":{}}}],["topic.servic",{"_index":461,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditorComponent.html":{}}}],["topic.topicnam",{"_index":471,"title":{},"body":{"components/DashboardComponent.html":{}}}],["topic/subtop",{"_index":470,"title":{},"body":{"components/DashboardComponent.html":{}}}],["topiccr",{"_index":805,"title":{},"body":{"classes/Topic.html":{}}}],["topiceditor",{"_index":494,"title":{},"body":{"components/EditorComponent.html":{}}}],["topicnam",{"_index":495,"title":{},"body":{"components/EditorComponent.html":{},"classes/Subtopic.html":{},"classes/Topic.html":{}}}],["topicservic",{"_index":451,"title":{"injectables/TopicService.html":{}},"body":{"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"injectables/TopicService.html":{},"coverage.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["true",{"_index":184,"title":{},"body":{"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/EditorComponent.html":{},"components/QuestionDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":104,"title":{},"body":{"classes/Answer.html":{},"components/AnswerComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"classes/QuestionListItem.html":{},"components/QuestionListItemComponent.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"classes/Subtopic.html":{},"injectables/SubtopicService.html":{},"classes/Topic.html":{},"injectables/TopicService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unabl",{"_index":698,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["unit",{"_index":920,"title":{},"body":{"index.html":{}}}],["up",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["updat",{"_index":268,"title":{},"body":{"injectables/AnswerService.html":{}}}],["url",{"_index":257,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CommentService.html":{},"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{}}}],["us",{"_index":199,"title":{},"body":{"components/AnswerComponent.html":{},"injectables/QuestionService.html":{},"index.html":{}}}],["user",{"_index":602,"title":{"classes/User.html":{}},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{}}}],["user(\"iit2016067",{"_index":778,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["user(\"john",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.servic",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["useremailid",{"_index":825,"title":{},"body":{"classes/User.html":{}}}],["usernam",{"_index":826,"title":{},"body":{"classes/User.html":{}}}],["userpassword",{"_index":827,"title":{},"body":{"classes/User.html":{}}}],["userrollnumb",{"_index":828,"title":{},"body":{"classes/User.html":{}}}],["userservic",{"_index":598,"title":{"injectables/UserService.html":{}},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{}}}],["usertyp",{"_index":758,"title":{"interfaces/UserType.html":{}},"body":{"components/SignupComponent.html":{},"classes/User.html":{},"interfaces/UserType.html":{},"coverage.html":{}}}],["usertype.viewvalu",{"_index":786,"title":{},"body":{"components/SignupComponent.html":{}}}],["valu",{"_index":236,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"components/SignupComponent.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["variabl",{"_index":856,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{}}}],["version",{"_index":898,"title":{},"body":{"index.html":{}}}],["via",{"_index":923,"title":{},"body":{"index.html":{}}}],["view",{"_index":209,"title":{},"body":{"components/AnswerComponent.html":{}}}],["viewvalu",{"_index":769,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["vijay",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["vohra",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserType.html":{}}}],["void",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AnswerComponent.html":{},"components/CommentComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionListItemComponent.html":{},"components/SignupComponent.html":{}}}],["weird",{"_index":416,"title":{},"body":{"components/CommentComponent.html":{}}}],["well",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["ye",{"_index":106,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/Comment.html":{},"injectables/CommentService.html":{},"injectables/QuestionService.html":{},"injectables/SubtopicService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["zone.j",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Made By: \n\n  \n  \n    \n      \n      Maanas Vohra\n      IIT2016067\n    \n    \n    \n      \n        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes\n        very well with mountainous terrain, the Shiba Inu was originally bred for hunting.\n      \n     -->\n    \n      LIKE\n      SHARE\n     -->\n  \n\n  \n  \n    \n      \n      Nitin Vijay\n      IIT2016074\n    \n    \n    \n      \n        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes\n        very well with mountainous terrain, the Shiba Inu was originally bred for hunting.\n      \n     -->\n    \n          LIKE\n          SHARE\n         -->\n  \n\n  \n  \n    \n      \n      Swapnil Gharat\n      IIT2016076\n    \n    \n    \n      \n        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes\n        very well with mountainous terrain, the Shiba Inu was originally bred for hunting.\n      \n     -->\n    \n        LIKE\n        SHARE\n       -->\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Made By:                     Maanas Vohra      IIT2016067                          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes        very well with mountainous terrain, the Shiba Inu was originally bred for hunting.           -->          LIKE      SHARE     -->                      Nitin Vijay      IIT2016074                          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes        very well with mountainous terrain, the Shiba Inu was originally bred for hunting.           -->              LIKE          SHARE         -->                      Swapnil Gharat      IIT2016076                          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes        very well with mountainous terrain, the Shiba Inu was originally bred for hunting.           -->            LIKE        SHARE       -->  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionListItemComponent', 'selector': 'app-question-list-item'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Answer.html":{"url":"classes/Answer.html","title":"class - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/answer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answerContent\n                            \n                            \n                                answerCreator\n                            \n                            \n                                answerNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerCreator: string, answerContent: string, answerNumber?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/answer.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerCreator\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerContent\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerNumber\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answerContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answerContent:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answerCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answerCreator:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answerNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answerNumber:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Answer {\n    answerCreator: string;\n    answerContent: string;\n    answerNumber: number;\n\n    // this handles an exception case for the implemented functionality of adding answer\n    constructor(answerCreator: string, answerContent: string, answerNumber?: number) {\n        this.answerCreator = answerCreator;\n        this.answerContent = answerContent;\n        if(answerNumber) {\n            this.answerNumber = answerNumber;\n        } else {\n            this.answerNumber = -1;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnswerComponent.html":{"url":"components/AnswerComponent.html","title":"component - AnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/answer/answer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-answer\n            \n\n            \n                styleUrls\n                answer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./answer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answerEditorDisplayed\n                            \n                            \n                                comments\n                            \n                            \n                                commentsDisplayed\n                            \n                            \n                                editableAnswer\n                            \n                            \n                                editorDisplayed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAnswer\n                            \n                            \n                                displayAnswerEditorForm\n                            \n                            \n                                displayComments\n                            \n                            \n                                displayEditor\n                            \n                            \n                                getComments\n                            \n                            \n                                hideAnswerEditorForm\n                            \n                            \n                                hideComments\n                            \n                            \n                                hideEditor\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                refreshAnswers\n                            \n                            \n                                refreshComments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentAnswer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                refreshAnswersRequest\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commentService: CommentService, answerService: AnswerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/answer/answer.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commentService\n                                                  \n                                                        \n                                                                    CommentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                    AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentAnswer\n                    \n                    \n                            \n                            Type :    Answer\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        refreshAnswersRequest\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAnswer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAnswerEditorForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayAnswerEditorForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayComments\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayComments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComments\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideAnswerEditorForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideAnswerEditorForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideComments\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideComments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshAnswers\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshAnswers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshComments\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshComments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answerEditorDisplayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answerEditorDisplayed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        comments:     Comment[]\n\n                    \n                \n                    \n                        \n                            Type :     Comment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentsDisplayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        commentsDisplayed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editableAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editableAnswer:     Answer\n\n                    \n                \n                    \n                        \n                            Type :     Answer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorDisplayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorDisplayed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Answer } from '../answer';\nimport { CommentService } from '../comment.service';\nimport { AnswerService } from '../answer.service'; \nimport { Comment } from '../comment';\n\n@Component({\n  selector: 'app-answer',\n  templateUrl: './answer.component.html',\n  styleUrls: ['./answer.component.css']\n})\nexport class AnswerComponent implements OnInit {\n\n  @Input() currentAnswer: Answer;\n\n  @Output() refreshAnswersRequest: EventEmitter;\n\n  commentsDisplayed: boolean;\n  comments: Comment[];\n  editorDisplayed: boolean;\n  answerEditorDisplayed: boolean;\n  \n  editableAnswer: Answer;\n\n  constructor(\n    private commentService: CommentService,\n    private answerService: AnswerService\n  ) {\n    this.commentsDisplayed = false;\n    this.refreshAnswersRequest = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.getComments();\n    this.editorDisplayed = false;\n    this.answerEditorDisplayed = false;\n    this.editableAnswer = new Answer(this.currentAnswer.answerCreator, this.currentAnswer.answerContent, this.currentAnswer.answerNumber);\n  }\n\n  getComments() {\n    this.commentService.getComments(this.currentAnswer.answerNumber)\n    .subscribe((comments) => { this.comments = comments; });\n  }\n\n  displayEditor() {\n    this.editorDisplayed = true;\n  }\n\n  hideEditor() {\n    this.editorDisplayed = false;\n  }\n\n  displayComments() {\n    this.commentsDisplayed = true;\n  }\n\n  hideComments() {\n    this.commentsDisplayed = false;\n  }\n\n  refreshComments() {\n    this.getComments();\n  }\n\n  refreshAnswers() {\n    this.refreshAnswersRequest.emit(true);\n  }\n\n  deleteAnswer() {\n    let observable = this.answerService.deleteAnswer(this.currentAnswer.answerNumber);\n    let observer = {\n      next: (response) => {\n        if(response === 1) {\n          this.refreshAnswers();\n        } else { alert(\"some error!\"); }\n      },\n      error: (error) => { alert(\"Even more error!\"); },\n      complete: () => {}\n    }\n\n    observable.subscribe(observer);\n  }\n\n  displayAnswerEditorForm() {\n    this.answerEditorDisplayed = true;\n  }\n\n  hideAnswerEditorForm() {\n    this.editableAnswer.answerContent = this.currentAnswer.answerContent;\n    this.answerEditorDisplayed = false;\n  }\n\n  // this is used to edit the answer\n  onSubmit() {\n    let observable = this.answerService.editAnswer(this.editableAnswer.answerContent, this.editableAnswer.answerNumber);\n    let observer = {\n      next: (response) => {\n        if(response === 1) {\n          this.refreshAnswers();\n        } else { alert(\"Error\"); }\n      },\n      error: (error) => { alert(\"more error!\"); },\n      complete: () => { }\n    }\n\n    observable.subscribe(observer);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        {{currentAnswer.answerContent}}\n      \n      \n        \n          \n            \n              \n            \n            Done!\n          \n          Cancel\n        \n      \n      \n      \n        \n          \n            edit\n          \n          \n            delete\n          \n        \n        \n        \n          View Comments\n        \n        \n        \n          Add comment\n          Hide comments\n        \n      \n    \n    \n      \n        \n      \n      \n        \n          \n          \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{currentAnswer.answerContent}}                                                                                Done!                    Cancel                                                        edit                                delete                                            View Comments                                  Add comment          Hide comments                                                                                                          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionListItemComponent', 'selector': 'app-question-list-item'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerService.html":{"url":"injectables/AnswerService.html","title":"injectable - AnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/answer.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAnswer\n                            \n                            \n                                deleteAnswer\n                            \n                            \n                                editAnswer\n                            \n                            \n                                getAnswers\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/answer.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAnswer(inputAnswer: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inputAnswer\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAnswer(answerNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \neditAnswer(answerContent: string, answerNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerContent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        answerNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAnswers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAnswers(questionNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(operation: string, result?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/answer.service.ts:21\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        operation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'operation'\n                                                        \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Answer } from './answer';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  // get all answers for a particular question\n  getAnswers(questionNumber: number): Observable {\n    const url = 'http://localhost:3000/api/answers?questionNumber=' + questionNumber;\n    return this.http.get(url)\n      .pipe(\n        catchError(this.handleError('get answer for a particular question', []))\n      );\n  }\n\n  // create a new answer\n  addAnswer(inputAnswer: any): Observable {\n    return this.http.post('http://localhost:3000/api/answers', inputAnswer, httpOptions)\n      .pipe(\n        catchError(this.handleError('adding new answer', -1))\n      );\n  }\n\n  // delete a particular answer\n  deleteAnswer(answerNumber: number): Observable {\n    const url = 'http://localhost:3000/api/answers/' + answerNumber;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError('deleting answer', \"error\"))\n      );\n  }\n\n  // update answer\n  editAnswer(answerContent: string, answerNumber: number): Observable {\n    const url = 'http://localhost:3000/api/answers/' + answerNumber;\n    const message = { answerContent: answerContent };\n    return this.http.put(url, message, httpOptions)\n      .pipe(\n        catchError(this.handleError('updating answer', -1))\n      );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Student Query Portal'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Student Query Portal';\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    Student Query Discussion Portal\n  \n\n\n\n  \n    \n      Student Query Portal\n      About\n      Login/Sign Up\n      Dashboard\n    \n  \n  \n    \n    \n    \n\n    \n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu              Student Query Discussion Portal              Student Query Portal      About      Login/Sign Up      Dashboard                          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionListItemComponent', 'selector': 'app-question-list-item'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAnswerComponent\n\nAnswerComponent\n\nAppModule -->\n\nAnswerComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nQuestionDetailComponent\n\nQuestionDetailComponent\n\nAppModule -->\n\nQuestionDetailComponent->AppModule\n\n\n\n\n\nQuestionListItemComponent\n\nQuestionListItemComponent\n\nAppModule -->\n\nQuestionListItemComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutComponent\n                            \n                            \n                                AnswerComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                CommentComponent\n                            \n                            \n                                DashboardComponent\n                            \n                            \n                                EditorComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                QuestionDetailComponent\n                            \n                            \n                                QuestionListItemComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n// material.angular.io requirements for animations\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// miscellaneous imports for reusable angular components\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\n\n// custom components\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { Browser } from 'protractor';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { AboutComponent } from './about/about.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { QuestionListItemComponent } from './question-list-item/question-list-item.component';\nimport { QuestionDetailComponent } from './question-detail/question-detail.component';\nimport { AnswerComponent } from './answer/answer.component';\nimport { CommentComponent } from './comment/comment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AboutComponent,\n    SignupComponent,\n    EditorComponent,\n    DashboardComponent,\n    QuestionListItemComponent,\n    QuestionDetailComponent,\n    AnswerComponent,\n    CommentComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatDividerModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './about/about.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { QuestionDetailComponent } from './question-detail/question-detail.component';\n\nconst routes: Routes = [\n\n  { path: 'about', component: AboutComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'questions/:questionNumber', component: QuestionDetailComponent }\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forRoot(routes)]\n})\n\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commentContent\n                            \n                            \n                                commentCreator\n                            \n                            \n                                commentNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commentCreator: string, commentContent: string, commentNumber?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/comment.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commentCreator\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentContent\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentNumber\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        commentContent:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        commentCreator:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        commentNumber:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n    commentCreator: string;\n    commentContent: string;\n    commentNumber: number;\n\n    constructor(commentCreator: string, commentContent: string, commentNumber?: number) {\n        this.commentCreator = commentCreator;\n        this.commentContent = commentContent;\n        if(commentNumber) {\n            this.commentNumber = commentNumber;\n        } else {\n            this.commentNumber = -1;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comment/comment.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editableComment\n                            \n                            \n                                editFormDisplayed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                displayEditForm\n                            \n                            \n                                hideEditForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                refreshComments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                refreshCommentsRequest\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commentService: CommentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/comment/comment.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commentService\n                                                  \n                                                        \n                                                                    CommentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comment\n                    \n                    \n                            \n                            Type :    Comment\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        refreshCommentsRequest\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteComment\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteComment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayEditForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayEditForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideEditForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideEditForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshComments\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshComments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editableComment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editableComment:     Comment\n\n                    \n                \n                    \n                        \n                            Type :     Comment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editFormDisplayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editFormDisplayed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Comment } from '../comment';\nimport { CommentService } from '../comment.service';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n\n  @Input('comment') currentComment: Comment;\n  @Output() refreshCommentsRequest: EventEmitter;\n\n  editableComment: Comment;\n  editFormDisplayed: boolean;\n\n  constructor(\n    private commentService: CommentService\n  ) { \n    this.refreshCommentsRequest = new EventEmitter();\n    this.editFormDisplayed = false;\n  }\n\n  ngOnInit() {\n    this.editableComment = new Comment(this.currentComment.commentCreator, this.currentComment.commentContent, this.currentComment.commentNumber);\n  }\n\n  displayEditForm() {\n    this.editFormDisplayed = true;\n  }\n\n  hideEditForm() {\n    this.editableComment.commentContent = this.currentComment.commentContent;\n    this.editFormDisplayed = false;\n  }\n\n  deleteComment() {\n    let observable = this.commentService.deleteComment(this.currentComment.commentNumber);\n    let observer = {\n      next: (response) => {\n        if(response === 1) {\n          this.refreshComments();\n        } else {\n          alert(\"Some error\");\n        }\n      },\n      error: (error) => { alert('even more weird error'); },\n      complete: () => { }\n    }\n    observable.subscribe(observer);\n  }\n\n  onSubmit() {\n    let observable = this.commentService.editComment(this.editableComment.commentContent, this.editableComment.commentNumber);\n    let observer = {\n      next: (response) => {\n        if(response === 1) {\n          this.refreshComments();\n        } else {\n          alert(\"Some error\");\n        }\n      },\n      error: (error) => { alert('even more weird error'); },\n      complete: () => { }\n    }\n    observable.subscribe(observer);\n  }\n\n  // goes to answer component\n  refreshComments() {\n    this.refreshCommentsRequest.emit(true);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{currentComment.commentContent}}\n    \n    \n      \n        edit\n      \n      \n        delete\n      \n    \n  \n  \n  \n    \n      \n        \n          \n        \n        Done!\n      \n      Cancel\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{currentComment.commentContent}}                      edit                    delete                                                            Done!            Cancel      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionListItemComponent', 'selector': 'app-question-list-item'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentService.html":{"url":"injectables/CommentService.html","title":"injectable - CommentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/comment.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addComment\n                            \n                            \n                                deleteComment\n                            \n                            \n                                editComment\n                            \n                            \n                                getComments\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/comment.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addComment\n                            \n                            \n                        \n                    \n                \n                \n                    \naddComment(inputComment: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inputComment\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteComment\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteComment(commentNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commentNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editComment\n                            \n                            \n                        \n                    \n                \n                \n                    \neditComment(commentContent: string, commentNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commentContent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        commentNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComments\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComments(answerNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(operation: string, result?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comment.service.ts:21\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        operation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'operation'\n                                                        \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Comment } from './comment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  // get all comments for a particular answer\n  getComments(answerNumber: number): Observable {\n    const url = 'http://localhost:3000/api/comments?answerNumber=' + answerNumber;\n    return this.http.get(url)\n      .pipe(\n        catchError(this.handleError('get comments for a particular answer', []))\n      );\n  }\n\n  // creation of new comment\n  addComment(inputComment: any): Observable {\n    return this.http.post('http://localhost:3000/api/comments', inputComment, httpOptions)\n      .pipe(\n        catchError(this.handleError('adding new comment', -1))\n      );\n  }\n\n  deleteComment(commentNumber: number): Observable {\n    const url = 'http://localhost:3000/api/comments/' + commentNumber;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError('error while deleting comment', -1))\n      );\n  }\n\n  editComment(commentContent: string, commentNumber: number): Observable {\n    const url = `http://localhost:3000/api/comments/${commentNumber}`;\n    const message = { commentContent: commentContent };\n    return this.http.put(url, message, httpOptions)\n      .pipe(\n        catchError(this.handleError('error while editing comment', -1))\n      );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSubtopicName\n                            \n                            \n                                topics\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTopicsAndSubtopics\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectSubtopic\n                            \n                            \n                                refreshDashboardSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(topicService: TopicService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        topicService\n                                                  \n                                                        \n                                                                    TopicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTopicsAndSubtopics\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTopicsAndSubtopics()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelectSubtopic\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelectSubtopic(selectedSubtopicName: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedSubtopicName\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshDashboardSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshDashboardSidenav($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSubtopicName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSubtopicName:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        topics:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TopicService } from '../topic.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  topics: any;\n  currentSubtopicName: String;\n\n  constructor(\n    private topicService: TopicService,\n  ) {\n    this.topics = [];\n  }\n\n  onSelectSubtopic(selectedSubtopicName: String) {\n    this.currentSubtopicName = selectedSubtopicName;\n  }\n\n  getTopicsAndSubtopics() {\n    this.topicService.getAllTopicsAndSubtopics()\n      .subscribe((result) => { this.topics = result; });\n  }\n\n  ngOnInit() {\n    this.getTopicsAndSubtopics();\n  }\n\n  // refresh the sidenav when submitted a new topic/subtopic\n  refreshDashboardSidenav($event) {\n    this.getTopicsAndSubtopics();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        \n        \n          \n            \n              {{ topic.topicName }}\n            \n            \n              \n            \n          \n\n          \n            \n\n              \n              \n\n              {{ subtopic }}\n              SubTopic 1\n                  SubTopic 2\n                  SubTopic 3 -->\n            \n          \n\n        \n\n      \n    \n    \n\n      \n        \n        \n          \n        \n      \n\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ topic.topicName }}                                                                                                                            {{ subtopic }}              SubTopic 1                  SubTopic 2                  SubTopic 3 -->                                                                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionListItemComponent', 'selector': 'app-question-list-item'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorComponent.html":{"url":"components/EditorComponent.html","title":"component - EditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editor/editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editor\n            \n\n            \n                styleUrls\n                editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                currentAnswer\n                            \n                            \n                                currentComment\n                            \n                            \n                                currentQuestion\n                            \n                            \n                                currentSubtopic\n                            \n                            \n                                currentTopic\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateEditor\n                            \n                            \n                                deactivateEditor\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                refreshAnswers\n                            \n                            \n                                refreshComments\n                            \n                            \n                                refreshDashboardSidenav\n                            \n                            \n                                refreshQuestionListItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                answerEditor\n                            \n                            \n                                answerNumber\n                            \n                            \n                                commentEditor\n                            \n                            \n                                questionEditor\n                            \n                            \n                                questionNumber\n                            \n                            \n                                subtopicEditor\n                            \n                            \n                                subtopicName\n                            \n                            \n                                topicEditor\n                            \n                            \n                                topicName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deactivateEditorRequest\n                            \n                            \n                                refreshAnswersRequest\n                            \n                            \n                                refreshCommentsRequest\n                            \n                            \n                                refreshDashboardSidenavRequest\n                            \n                            \n                                refreshQuestionListItemsRequest\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(subtopicService: SubtopicService, topicService: TopicService, questionService: QuestionService, answerService: AnswerService, commentService: CommentService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/editor/editor.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subtopicService\n                                                  \n                                                        \n                                                                    SubtopicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        topicService\n                                                  \n                                                        \n                                                                    TopicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                    AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentService\n                                                  \n                                                        \n                                                                    CommentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        answerEditor\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        answerNumber\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        commentEditor\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        questionEditor\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        questionNumber\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subtopicEditor\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subtopicName\n                    \n                    \n                            \n                            Type :    String\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        topicEditor\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        topicName\n                    \n                    \n                            \n                            Type :    String\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:29\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deactivateEditorRequest\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshAnswersRequest\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshCommentsRequest\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshDashboardSidenavRequest\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshQuestionListItemsRequest\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activateEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivateEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivateEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivateEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshAnswers\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshAnswers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:222\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshComments\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshComments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:227\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshDashboardSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshDashboardSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:212\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshQuestionListItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshQuestionListItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:217\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentAnswer:     Answer\n\n                    \n                \n                    \n                        \n                            Type :     Answer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentComment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentComment:     Comment\n\n                    \n                \n                    \n                        \n                            Type :     Comment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentQuestion:     Question\n\n                    \n                \n                    \n                        \n                            Type :     Question\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSubtopic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSubtopic:     Subtopic\n\n                    \n                \n                    \n                        \n                            Type :     Subtopic\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentTopic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentTopic:     Topic\n\n                    \n                \n                    \n                        \n                            Type :     Topic\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, SimpleChanges } from '@angular/core';\n\nimport { Subtopic } from '../subtopic';\nimport { Topic } from '../topic';\nimport { Question } from '../question';\nimport { Answer } from '../answer';\nimport { Comment } from '../comment';\n\nimport { SubtopicService } from '../subtopic.service';\nimport { TopicService } from '../topic.service';\nimport { QuestionService } from '../question-service.service';\nimport { AnswerService } from '../answer.service';\nimport { CommentService } from '../comment.service';\n\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  @Input() topicEditor: boolean;\n  @Input() subtopicEditor: boolean;\n  @Input() questionEditor: boolean;\n  @Input() answerEditor: boolean;\n  @Input() commentEditor: boolean;\n\n  @Input() topicName: String;\n  @Input() subtopicName: String;\n  @Input() questionNumber: number;\n  @Input() answerNumber: number;\n\n  @Output() refreshDashboardSidenavRequest: EventEmitter;\n  @Output() refreshQuestionListItemsRequest: EventEmitter;\n  @Output() deactivateEditorRequest: EventEmitter;\n  @Output() refreshAnswersRequest: EventEmitter;\n  @Output() refreshCommentsRequest: EventEmitter;\n\n  currentSubtopic: Subtopic;\n  currentTopic: Topic;\n  currentQuestion: Question;\n  currentAnswer: Answer;\n  currentComment: Comment;\n\n  activated: boolean;\n\n  constructor(\n    private subtopicService: SubtopicService,\n    private topicService: TopicService,\n    private questionService: QuestionService,\n    private answerService: AnswerService,\n    private commentService: CommentService,\n    public snackBar: MatSnackBar) {\n    this.activated = false;\n    this.refreshDashboardSidenavRequest = new EventEmitter();\n    this.refreshQuestionListItemsRequest = new EventEmitter();\n    this.deactivateEditorRequest = new EventEmitter();\n    this.refreshAnswersRequest = new EventEmitter();\n    this.refreshCommentsRequest = new EventEmitter();\n  }\n\n  ngOnInit() {\n    if (this.topicEditor === true) {\n      this.currentTopic = new Topic(\"top123\", \"maanas\");\n    } else if (this.subtopicEditor === true) {\n      this.currentSubtopic = new Subtopic(\"sub123\", \"maanas\", this.topicName);\n    } else if (this.questionEditor === true) {\n      this.currentQuestion = new Question(\"rollicks\", this.subtopicName, \"question-heading\", \"question-subheading\", \"question-content\");\n    } else if (this.answerEditor === true) {\n      this.currentAnswer = new Answer(\"rollicks\", \"add-content\", -1);\n    } else if (this.commentEditor === true) {\n      this.currentComment = new Comment(\"rollicks\", \"add-comment\", -1);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // making changes to the subtopic name only if the editor is of question type\n    if (this.questionEditor === true && !changes.subtopicName.firstChange) {\n      this.currentQuestion.subtopicName = changes.subtopicName.currentValue;\n    }\n  }\n\n  activateEditor() {\n    this.activated = true;\n  }\n\n  deactivateEditor() {\n    if (this.answerEditor === true || this.commentEditor === true) {\n      this.deactivateEditorRequest.emit(true);\n    } else {\n      this.activated = false;\n    }\n  }\n\n  onSubmit() {\n    // for the subtopic editor\n    if (this.subtopicEditor === true) {\n      // submit a POST request\n\n      let observable = this.subtopicService.addSubtopic(this.currentSubtopic);\n      let observer = {\n        next: (response) => {\n          if (response === 1) {\n            this.snackBar.open(\"New subtopic created!\", \"Okay!\");\n            this.refreshDashboardSidenav();\n          } else if (response === 0) {\n            this.snackBar.open(\"Duplicate name subtopic\", \"Okay!\");\n          } else {\n            this.snackBar.open(\"Some error while creating subtopic\", \"Okay!\");\n          }\n        },\n        error: (error) => {\n          alert(error);\n        },\n        complete: () => {\n        }\n      }\n\n      // make the subscription\n      let subscription = observable.subscribe(observer);\n    } else if (this.topicEditor === true) {\n      // for the topic editor\n\n      let observable = this.topicService.addTopic(this.currentTopic);\n      let observer = {\n        next: (response) => {\n          if (response === 1) {\n            this.snackBar.open(\"New Topic Created\", \"Okay!\");\n            this.refreshDashboardSidenav();\n          } else if (response === 0) {\n            this.snackBar.open(\"Duplicate Topic\", \"Okay!\");\n          } else {\n            this.snackBar.open(\"Some error while creating new topic\");\n          }\n        },\n        error: (error) => {\n          alert(error);\n        },\n        complete: () => {\n\n        }\n      }\n      observable.subscribe(observer);\n    } else if (this.questionEditor) {\n      let observable = this.questionService.addQuestion(this.currentQuestion);\n      let observer = {\n        next: (response) => {\n          if (response === 1) {\n            this.snackBar.open(\"New Question Created!\", \"Okay!\");\n            this.deactivateEditor();\n            this.refreshQuestionListItems();\n          } else {\n            this.snackBar.open(\"Some error while creating new question!\", \"Okay!\");\n          }\n        },\n        error: (error) => { alert(error); },\n        complete: () => { }\n      }\n\n      observable.subscribe(observer);\n    } else if(this.answerEditor) {\n      const inputAnswer : any = {\n        questionNumber: this.questionNumber, \n        answerCreator: this.currentAnswer.answerCreator,\n        answerContent: this.currentAnswer.answerContent,\n        answerNumber: this.currentAnswer.answerNumber\n      }\n      let observable = this.answerService.addAnswer(inputAnswer);\n      let observer = {\n        next: (response) => {\n          if(response === 1) {\n            this.snackBar.open(\"New answer created!\", \"okay!\");\n            this.deactivateEditor();\n            this.refreshAnswers();\n          } else {\n            this.snackBar.open(\"Some error while creating new answer!\", \"okay!\");\n          }\n        },\n        error: (error) => { alert(error); },\n        complete: () => { }\n      }\n    \n      observable.subscribe(observer);\n    } else if(this.commentEditor === true) {\n\n      const inputComment = {\n        answerNumber: this.answerNumber,\n        commentCreator: this.currentComment.commentCreator,\n        commentContent: this.currentComment.commentContent,\n        commentNumber: this.currentComment.commentNumber\n      }\n\n      let observable = this.commentService.addComment(inputComment);\n      let observer = {\n        next: (response) => {\n          if(response === 1) {\n            this.snackBar.open(\"New comment created!\", \"Okay!\");\n            this.deactivateEditor();\n            this.refreshComments();\n          } else {\n            this.snackBar.open(\"Some error while creating new comment\", \"Okay!\");\n          }\n        }\n      }\n\n      observable.subscribe(observer);\n    }\n  }\n\n  // goes to dashboard component\n  refreshDashboardSidenav() {\n    this.refreshDashboardSidenavRequest.emit(true);\n  }\n\n  // goes to question-list-item component\n  refreshQuestionListItems() {\n    this.refreshQuestionListItemsRequest.emit(true);\n  }\n\n  // goes to question-detail component\n  refreshAnswers() {\n    this.refreshAnswersRequest.emit(true);\n  }\n\n  // goes to answer component\n  refreshComments() {\n    this.refreshCommentsRequest.emit(true);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    New Subtopic\n  \n  \n    \n      \n        \n      \n      Submit\n    \n    Cancel\n  \n\n\n\n\n  \n    New Topic\n  \n  \n    \n      \n        \n      \n      Submit\n    \n    Cancel\n  \n\n\n\n\n  \n    New Question\n  \n  \n    \n      \n      \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              \n            \n            Submit\n          \n          Cancel\n        \n      \n    \n  \n\n\n\n\n  \n    \n    \n    \n      \n        \n          \n        \n        Submit\n      \n      Cancel\n    \n  \n\n\n\n\n  \n    \n      \n        \n      \n      Submit\n    \n    Cancel\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      New Subtopic                                  Submit        Cancel        New Topic                                  Submit        Cancel        New Question                                                                                                                                                                    Submit                    Cancel                                                                          Submit            Cancel                                      Submit        Cancel  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionListItemComponent', 'selector': 'app-question-list-item'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginUser: User;\n\n  constructor(\n    public snackBar: MatSnackBar,\n    private userService: UserService\n  ) {\n      this.loginUser = new User(\"John Doe\", \"Hello123\", \"\", \"\", \"\");\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    \n    // check if the user exists or not \n    let observable = this.userService.getUser(this.loginUser);\n    let observer = {\n      next: (response) => {\n        if(response == 1) {\n          this.snackBar.open(\"Correct!\", \"Okay\", {duration : 5000});\n        } else if(response == 0 || response == 2) {\n          this.snackBar.open(\"Incorrect Password and/or password\", \"Okay\", {duration: 5000});\n        }\n      }\n    }\n\n    let subscription = observable.subscribe(observer);\n  }\n\n}\n\n    \n\n    \n        \n    \n        Login/Sign Up\n\n\n        \n\n            \n                \n                    \n                \n            \n\n            \n                \n                    \n                \n            \n\n            \n                Login\n                \n                    New User? Sign up!\n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login/Sign Up                                                                                                                                                                                            Login                                    New User? Sign up!                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionListItemComponent', 'selector': 'app-question-list-item'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Question.html":{"url":"classes/Question.html","title":"class - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/question.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                questionContent\n                            \n                            \n                                    Public\n                                questionCreator\n                            \n                            \n                                    Public\n                                questionHeading\n                            \n                            \n                                    Public\n                                questionSubheading\n                            \n                            \n                                    Public\n                                subtopicName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(questionCreator: String, subtopicName: String, questionHeading: String, questionSubheading: String, questionContent: String)\n                    \n                \n                        \n                            \n                                Defined in src/app/question.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionCreator\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subtopicName\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionHeading\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionSubheading\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionContent\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questionContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionContent:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questionCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionCreator:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questionHeading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionHeading:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questionSubheading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionSubheading:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subtopicName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subtopicName:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Question {\n    constructor(\n        public questionCreator: String,\n        public subtopicName: String, \n        public questionHeading: String,\n        public questionSubheading: String,\n        public questionContent: String\n    ){}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionDetailComponent.html":{"url":"components/QuestionDetailComponent.html","title":"component - QuestionDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/question-detail/question-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-detail\n            \n\n            \n                styleUrls\n                question-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./question-detail.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answers\n                            \n                            \n                                editableQuestion\n                            \n                            \n                                editorActivated\n                            \n                            \n                                questionDetails\n                            \n                            \n                                questionEditorActivated\n                            \n                            \n                                questionNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateEditor\n                            \n                            \n                                activateQuestionEditor\n                            \n                            \n                                deactivateEditor\n                            \n                            \n                                deactivateQuestionEditor\n                            \n                            \n                                deleteQuestion\n                            \n                            \n                                getAnswerDetails\n                            \n                            \n                                getQuestionDetails\n                            \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshAnswers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(normalRouter: Router, router: ActivatedRoute, location: Location, questionService: QuestionService, answerService: AnswerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/question-detail/question-detail.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        normalRouter\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                    AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activateEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivateEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activateQuestionEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivateQuestionEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivateEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivateEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivateQuestionEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivateQuestionEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteQuestion()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAnswerDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAnswerDetails()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getQuestionDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQuestionDetails()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goBack\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshAnswers\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshAnswers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answers:     Answer[]\n\n                    \n                \n                    \n                        \n                            Type :     Answer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editableQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editableQuestion:     Question\n\n                    \n                \n                    \n                        \n                            Type :     Question\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorActivated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorActivated:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionDetails:     Question\n\n                    \n                \n                    \n                        \n                            Type :     Question\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionEditorActivated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionEditorActivated:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionNumber:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-detail/question-detail.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Question } from '../question';\nimport { Answer } from '../answer';\n\nimport { QuestionService } from '../question-service.service';\nimport { AnswerService } from '../answer.service';\n\n@Component({\n  selector: 'app-question-detail',\n  templateUrl: './question-detail.component.html',\n  styleUrls: ['./question-detail.component.css']\n})\nexport class QuestionDetailComponent implements OnInit {\n\n  questionNumber: number;\n  questionDetails: Question;\n  editorActivated: boolean;\n  answers: Answer[];\n  editableQuestion: Question;\n  questionEditorActivated: boolean;\n\n  constructor(\n    private normalRouter: Router,\n    private router: ActivatedRoute,\n    private location: Location,\n    private questionService: QuestionService,\n    private answerService: AnswerService\n  ) {\n    this.questionEditorActivated = false;\n  }\n\n  ngOnInit() {\n    // fetch the questionNumber from the url\n    this.router.paramMap.subscribe((params: ParamMap) => {\n      const questionNumber = parseInt(params.get('questionNumber'));\n      this.questionNumber = questionNumber;\n\n      // fetch question details\n      this.getQuestionDetails();\n\n      // fetch answer details\n      this.getAnswerDetails();\n\n      // make editor deactivated;\n      this.editorActivated = false;\n\n    });\n  }\n\n  getAnswerDetails() {\n    this.answerService.getAnswers(this.questionNumber).subscribe(\n      (answers) => {\n        this.answers = answers;\n      }\n    )\n  }\n\n  getQuestionDetails() {\n    this.questionService.getQuestionDetails(this.questionNumber).subscribe(\n      (questionDetails) => {\n        this.questionDetails = questionDetails;\n        this.editableQuestion = new Question(\n          this.questionDetails.questionCreator, this.questionDetails.subtopicName,\n          this.questionDetails.questionHeading, this.questionDetails.questionSubheading,\n          this.questionDetails.questionContent);\n      }\n    );\n  }\n\n  refreshAnswers() {\n    this.getAnswerDetails();\n  }\n\n  activateEditor() {\n    this.editorActivated = true;\n  }\n\n  deactivateEditor() {\n    this.editorActivated = false;\n  }\n\n  activateQuestionEditor() {\n    this.questionEditorActivated = true;\n  }\n\n  deactivateQuestionEditor() {\n    this.questionEditorActivated = false;\n  }\n\n  deleteQuestion() {\n    let observable = this.questionService.deleteQuestion(this.questionNumber);\n    let observer = {\n      next: (response) => {\n        alert(response);\n        if (response === 1) {\n          alert(\"Question deleted!\");\n          this.normalRouter.navigate(['/dashboard']);\n        } else {\n          alert(\"Some error occurred\");\n        }\n      },\n      error: (error) => { alert(\"Some serious problem occurred\"); },\n      complete: () => { }\n    }\n\n    observable.subscribe(observer);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          {{questionDetails.questionHeading}}\n        \n        \n          \n            \n              {{questionDetails.questionSubheading}}\n            \n            \n              Created by {{questionDetails.questionCreator}}\n            \n          \n        \n      \n\n      \n        \n          \n            \n          \n          \n              \n          \n          \n              \n          \n          Submit\n        \n        Cancel\n      \n\n      \n        \n          \n            {{questionDetails.questionContent}}\n          \n          \n            \n              \n                edit\n              \n              \n                delete\n              \n            \n            \n              Add Answer\n            \n          \n        \n      \n    \n  \n\n  \n    \n  \n\n  \n  \n    \n      \n    \n  \n\n\n\n  \n    Unable to display information for the question. :/\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{questionDetails.questionHeading}}                                                    {{questionDetails.questionSubheading}}                                      Created by {{questionDetails.questionCreator}}                                                                                                                                                                Submit                Cancel                                          {{questionDetails.questionContent}}                                                              edit                                            delete                                                    Add Answer                                                                            Unable to display information for the question. :/  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionListItemComponent', 'selector': 'app-question-list-item'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionListItem.html":{"url":"classes/QuestionListItem.html","title":"class - QuestionListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/question-list-item.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                questionCreator\n                            \n                            \n                                    Public\n                                questionHeading\n                            \n                            \n                                    Public\n                                questionNumber\n                            \n                            \n                                    Public\n                                questionSubheading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(questionNumber: number, questionHeading: String, questionSubheading: String, questionCreator: String)\n                    \n                \n                        \n                            \n                                Defined in src/app/question-list-item.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionNumber\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionHeading\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionSubheading\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionCreator\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questionCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionCreator:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-list-item.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questionHeading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionHeading:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-list-item.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questionNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionNumber:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-list-item.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questionSubheading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionSubheading:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-list-item.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class QuestionListItem {\n    constructor(\n        public questionNumber: number,\n        public questionHeading: String,\n        public questionSubheading: String,\n        public questionCreator: String\n    ){}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionListItemComponent.html":{"url":"components/QuestionListItemComponent.html","title":"component - QuestionListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/question-list-item/question-list-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-list-item\n            \n\n            \n                styleUrls\n                question-list-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./question-list-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDisplayedQuestionListItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getQuestionListItems\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                readMore\n                            \n                            \n                                refreshQuestionListItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                subtopicName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/question-list-item/question-list-item.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        subtopicName\n                    \n                    \n                            \n                            Type :    String\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/question-list-item/question-list-item.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getQuestionListItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQuestionListItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-list-item/question-list-item.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-list-item/question-list-item.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-list-item/question-list-item.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readMore\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadMore(questionNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-list-item/question-list-item.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshQuestionListItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshQuestionListItems($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-list-item/question-list-item.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentDisplayedQuestionListItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentDisplayedQuestionListItems:     QuestionListItem[]\n\n                    \n                \n                    \n                        \n                            Type :     QuestionListItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question-list-item/question-list-item.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuestionService } from '../question-service.service';\nimport { QuestionListItem } from '../question-list-item';\n\n@Component({\n  selector: 'app-question-list-item',\n  templateUrl: './question-list-item.component.html',\n  styleUrls: ['./question-list-item.component.css']\n})\nexport class QuestionListItemComponent implements OnInit {\n\n  @Input() subtopicName: String;\n  currentDisplayedQuestionListItems: QuestionListItem[];  \n\n  constructor(\n    private questionService: QuestionService,\n    private router: Router    \n  ) { }\n\n  ngOnInit() {\n    this.getQuestionListItems();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.getQuestionListItems();\n  }\n\n  getQuestionListItems() {\n    this.questionService.getQuestionListItems(this.subtopicName)\n      .subscribe((result) => { this.currentDisplayedQuestionListItems = result; });\n  }\n\n  refreshQuestionListItems($event) {\n    this.getQuestionListItems();\n  }\n\n  readMore(questionNumber: number) {\n    this.router.navigate(['/questions', questionNumber]);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    No questions available, create new asap!\n  \n  \n    \n      \n        {{ questionListItem.questionHeading }}\n        {{ questionListItem.questionCreator }}\n      \n      \n        \n          {{ questionListItem.questionSubheading }}\n        \n        Read More\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        No questions available, create new asap!                      {{ questionListItem.questionHeading }}        {{ questionListItem.questionCreator }}                              {{ questionListItem.questionSubheading }}                Read More            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionListItemComponent', 'selector': 'app-question-list-item'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/question-service.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuestion\n                            \n                            \n                                deleteQuestion\n                            \n                            \n                                getQuestionDetails\n                            \n                            \n                                getQuestionListItems\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/question-service.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \naddQuestion(inputQuestion: Question)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-service.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inputQuestion\n                                                        \n                                                                    Question\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteQuestion(questionNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-service.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getQuestionDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQuestionDetails(questionNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-service.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getQuestionListItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQuestionListItems(subtopicName: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-service.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subtopicName\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(operation: string, result?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/question-service.service.ts:21\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        operation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'operation'\n                                                        \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { QuestionListItem } from './question-list-item';\nimport { Question } from './question';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  constructor(\n    private http: HttpClient) { }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  // get a particular question : search by the question number\n  getQuestionDetails(questionNumber: number) : Observable {\n    const url = 'http://localhost:3000/api/questions/' + questionNumber;\n    return this.http.get(url) \n    .pipe(\n      catchError(this.handleError('get question details for a particular question', {}))\n    );\n  }\n\n  // get basic info of questions for listing onto dashboard \n  getQuestionListItems(subtopicName: String) : Observable {\n    const url = 'http://localhost:3000/api/questions?getBasicInfo=true&subtopicName=' + subtopicName;\n    return this.http.get(url)\n    .pipe(\n      catchError(this.handleError('get question list items', []))\n    );\n  }\n\n  // adding a new question for a particular subtopic\n  addQuestion(inputQuestion : Question) : Observable {\n    return this.http.post('http://localhost:3000/api/questions', inputQuestion, httpOptions)\n    .pipe(\n      catchError(this.handleError('adding new question', -1))\n    );\n  }\n\n  // deleting a question using the question number\n  deleteQuestion(questionNumber: number) : Observable {\n    const url = 'http://localhost:3000/api/questions/' + questionNumber; \n    return this.http.delete(url, httpOptions) \n    .pipe(\n      catchError(this.handleError('deleting question', -1))\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inputUser\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                userTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    diagnostic\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/signup/signup.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userTypes:     UserType[]\n\n                    \n                \n                    \n                        \n                            Type :     UserType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        diagnostic\n                    \n                \n\n                \n                    \n                        getdiagnostic()\n                    \n                \n                            \n                                \n                                    Defined in src/app/signup/signup.component.ts:54\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { UserService } from '../user.service';\nimport { MatSnackBar } from '@angular/material';\n\nexport interface UserType {\n  value: string,\n  viewValue: string\n}\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  // User types for the sign up form => will be removed later \n  userTypes: UserType[];\n  inputUser: User;\n\n  constructor(\n    public snackBar: MatSnackBar,\n    private userService: UserService) {\n    this.userTypes = [\n      { value: 'Admin', viewValue: 'Admin(God)' },\n      { value: 'Student', viewValue: 'Student(Gandu)' }\n    ];\n\n    this.inputUser = new User(\"IIT2016067\", \"Password123\", \"Maanas Vohra\", \"maanas@gmail.com\", this.userTypes[0].value);\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    let successfullySubmitted;\n\n    // Submit a POST request\n    let observable = this.userService.addUser(this.inputUser);\n    let observer = {\n      next: (response) => {\n        if (response == 0) {\n          this.snackBar.open(\"Duplicate entry\", \"Okay\", { duration: 5000 });\n        } else {\n          this.snackBar.open(\"New user created\", \"Okay\", { duration: 5000 });\n        }\n      },\n    }\n\n    let subscription = observable.subscribe(observer);\n  }\n\n  get diagnostic() {\n    return JSON.stringify(this.inputUser);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Login/Sign Up\n    \n\n      \n        \n          \n        \n      \n\n      \n        \n          \n        \n      \n\n      \n        \n          \n        \n      \n\n\n      \n        \n          \n        \n      \n\n\n      \n        \n          {{userType.viewValue}}\n        \n       -->\n      \n        \n          \n            \n              {{userType.viewValue}}\n            \n          \n        \n      \n\n\n      \n        Sign Up\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login/Sign Up                                                                                                                                                                                    {{userType.viewValue}}               -->                                                  {{userType.viewValue}}                                                  Sign Up            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionListItemComponent', 'selector': 'app-question-list-item'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subtopic.html":{"url":"classes/Subtopic.html","title":"class - Subtopic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subtopic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/subtopic.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                subtopicCreator\n                            \n                            \n                                    Public\n                                subtopicName\n                            \n                            \n                                    Public\n                                topicName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subtopicName: String, subtopicCreator: String, topicName: String)\n                    \n                \n                        \n                            \n                                Defined in src/app/subtopic.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subtopicName\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subtopicCreator\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        topicName\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subtopicCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subtopicCreator:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/subtopic.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subtopicName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subtopicName:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/subtopic.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            topicName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        topicName:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/subtopic.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Subtopic {\n    constructor(\n        public subtopicName: String,\n        public subtopicCreator: String,\n        public topicName: String\n    ){}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubtopicService.html":{"url":"injectables/SubtopicService.html","title":"injectable - SubtopicService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubtopicService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/subtopic.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSubtopic\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/subtopic.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSubtopic\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSubtopic(inputSubtopic: Subtopic)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/subtopic.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inputSubtopic\n                                                        \n                                                                    Subtopic\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(operation: string, result?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/subtopic.service.ts:21\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        operation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'operation'\n                                                        \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Subtopic } from './subtopic';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubtopicService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  addSubtopic(inputSubtopic: Subtopic): Observable {\n    return this.http.post(\"http://localhost:3000/api/subtopics\", inputSubtopic, httpOptions)\n      .pipe(\n        tap(function (response: any) {\n          response = of(response);\n        }),\n        catchError(this.handleError('Adding a new subtopic'))\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Topic.html":{"url":"classes/Topic.html","title":"class - Topic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Topic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/topic.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                topicCreator\n                            \n                            \n                                    Public\n                                topicName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(topicName: String, topicCreator: String)\n                    \n                \n                        \n                            \n                                Defined in src/app/topic.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        topicName\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        topicCreator\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            topicCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        topicCreator:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/topic.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            topicName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        topicName:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/topic.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Topic {\n    constructor(\n        public topicName : String,\n        public topicCreator : String\n    ){}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TopicService.html":{"url":"injectables/TopicService.html","title":"injectable - TopicService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TopicService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/topic.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTopic\n                            \n                            \n                                getAllTopicsAndSubtopics\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/topic.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTopic\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTopic(inputTopic: Topic)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/topic.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inputTopic\n                                                        \n                                                                    Topic\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllTopicsAndSubtopics\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllTopicsAndSubtopics()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/topic.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(operation: string, result?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/topic.service.ts:20\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        operation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'operation'\n                                                        \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Topic } from './topic';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopicService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n  \n  // get all topics and subtopics\n  getAllTopicsAndSubtopics() : Observable {\n    return this.http.get(\"http://localhost:3000/api/topics?getAllSubtopics=true\")\n      .pipe(\n        catchError(this.handleError('getTopicsAndSubtopics', []))\n      );\n  }\n\n  // create a new topic\n  addTopic(inputTopic : Topic) : Observable {\n    return this.http.post(\"http://localhost:3000/api/topics\", inputTopic, httpOptions)\n    .pipe(\n      tap(function(response : any) {\n        response = of(response);\n      }),\n      catchError(this.handleError('Creation of new topic'))\n    );\n  } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userEmailID\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                userPassword\n                            \n                            \n                                    Public\n                                userRollNumber\n                            \n                            \n                                    Public\n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRollNumber: String, userPassword: String, userName: String, userEmailID: String, userType: String)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRollNumber\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userPassword\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userName\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userEmailID\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userType\n                                                  \n                                                        \n                                                                    String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userEmailID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmailID:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userPassword:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userRollNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRollNumber:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userType:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n    constructor(\n        public userRollNumber: String,\n        public userPassword: String,\n        public userName: String,\n        public userEmailID: String,\n        public userType: String\n    ){}\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                getUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(inputUser: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inputUser\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser(inputUser: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inputUser\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(operation: string, result?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user.service.ts:19\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        operation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'operation'\n                                                        \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { User } from './user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private http: HttpClient) { }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  // creates a user during sign up \n  addUser(inputUser: User): Observable {\n    return this.http.post(\"http://localhost:3000/api/users\", inputUser, httpOptions)\n      .pipe(\n        tap(function (response: any) {\n          response = of(response);\n        }),\n        catchError(this.handleError('Adding user'))\n      );\n  }\n\n  getUser(inputUser: User): Observable {\n    return this.http.post(\"http://localhost:3000/login\", inputUser, httpOptions)\n      .pipe(\n        tap(function (response: any) {\n          response = of(response);\n        }),\n        catchError(this.handleError('Getting login data for session'))\n      );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserType.html":{"url":"interfaces/UserType.html","title":"interface - UserType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/signup/signup.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { UserService } from '../user.service';\nimport { MatSnackBar } from '@angular/material';\n\nexport interface UserType {\n  value: string,\n  viewValue: string\n}\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  // User types for the sign up form => will be removed later \n  userTypes: UserType[];\n  inputUser: User;\n\n  constructor(\n    public snackBar: MatSnackBar,\n    private userService: UserService) {\n    this.userTypes = [\n      { value: 'Admin', viewValue: 'Admin(God)' },\n      { value: 'Student', viewValue: 'Student(Gandu)' }\n    ];\n\n    this.inputUser = new User(\"IIT2016067\", \"Password123\", \"Maanas Vohra\", \"maanas@gmail.com\", this.userTypes[0].value);\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    let successfullySubmitted;\n\n    // Submit a POST request\n    let observable = this.userService.addUser(this.inputUser);\n    let observer = {\n      next: (response) => {\n        if (response == 0) {\n          this.snackBar.open(\"Duplicate entry\", \"Okay\", { duration: 5000 });\n        } else {\n          this.snackBar.open(\"New user created\", \"Okay\", { duration: 5000 });\n        }\n      },\n    }\n\n    let subscription = observable.subscribe(observer);\n  }\n\n  get diagnostic() {\n    return JSON.stringify(this.inputUser);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/about/about.component.ts\n            \n            \n                component\n            \n            \n                AboutComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/answer.service.ts\n            \n            \n                injectable\n            \n            \n                AnswerService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/answer.service.ts\n            \n            \n                variable\n            \n            \n                httpOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/answer.ts\n            \n            \n                class\n            \n            \n                Answer\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/answer/answer.component.ts\n            \n            \n                component\n            \n            \n                AnswerComponent\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/comment.service.ts\n            \n            \n                injectable\n            \n            \n                CommentService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/comment.service.ts\n            \n            \n                variable\n            \n            \n                httpOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/comment.ts\n            \n            \n                class\n            \n            \n                Comment\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/comment/comment.component.ts\n            \n            \n                component\n            \n            \n                CommentComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/editor/editor.component.ts\n            \n            \n                component\n            \n            \n                EditorComponent\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/question-detail/question-detail.component.ts\n            \n            \n                component\n            \n            \n                QuestionDetailComponent\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/question-list-item.ts\n            \n            \n                class\n            \n            \n                QuestionListItem\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/question-list-item/question-list-item.component.ts\n            \n            \n                component\n            \n            \n                QuestionListItemComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/question-service.service.ts\n            \n            \n                injectable\n            \n            \n                QuestionService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/question-service.service.ts\n            \n            \n                variable\n            \n            \n                httpOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/question.ts\n            \n            \n                class\n            \n            \n                Question\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/signup/signup.component.ts\n            \n            \n                interface\n            \n            \n                UserType\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/subtopic.service.ts\n            \n            \n                injectable\n            \n            \n                SubtopicService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/subtopic.service.ts\n            \n            \n                variable\n            \n            \n                httpOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/subtopic.ts\n            \n            \n                class\n            \n            \n                Subtopic\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/topic.service.ts\n            \n            \n                injectable\n            \n            \n                TopicService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/topic.service.ts\n            \n            \n                variable\n            \n            \n                httpOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/topic.ts\n            \n            \n                class\n            \n            \n                Topic\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/user.service.ts\n            \n            \n                variable\n            \n            \n                httpOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.9\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nStudentDiscussionPortalFrontend\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nStudent-Discussion-Portal-Frontend\nStudent Query Portal Frontend built using Angular\nThis is a student query portal which will be an SPA built in Angular. It will be used to address the queries of students and could be used for other purposes as well.\nThe topics for the queries will have subtopics, and for each subtopic there will be a number of questions. Each question could be answered by the students and students can comment on the answers as well.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAnswerComponent\n\nAnswerComponent\n\nAppModule -->\n\nAnswerComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nQuestionDetailComponent\n\nQuestionDetailComponent\n\nAppModule -->\n\nQuestionDetailComponent->AppModule\n\n\n\n\n\nQuestionListItemComponent\n\nQuestionListItemComponent\n\nAppModule -->\n\nQuestionListItemComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpOptions   (src/.../answer.service.ts)\n                        \n                        \n                            httpOptions   (src/.../comment.service.ts)\n                        \n                        \n                            httpOptions   (src/.../question-service.service.ts)\n                        \n                        \n                            httpOptions   (src/.../subtopic.service.ts)\n                        \n                        \n                            httpOptions   (src/.../topic.service.ts)\n                        \n                        \n                            httpOptions   (src/.../user.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/answer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/comment.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/question-service.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/subtopic.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/topic.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
